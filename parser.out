Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    break
    continue
    del
    elif
    else
    false
    for
    func
    if
    lambda
    operator
    pass
    return
    struct
    true
    type_bad_struct
    while

Grammar

Rule 0     S' -> expr
Rule 1     expr -> expr operator_add expr
Rule 2     expr -> expr operator_sub expr
Rule 3     expr -> expr operator_mul expr
Rule 4     expr -> expr operator_div expr
Rule 5     expr -> expr operator_trudiv expr
Rule 6     expr -> expr operator_pow expr
Rule 7     expr -> expr operator_join expr
Rule 8     expr -> expr operator_split expr
Rule 9     expr -> expr operator_scan expr
Rule 10    expr -> expr operator_reduc expr
Rule 11    expr -> expr operator_bitand expr
Rule 12    expr -> expr operator_bitor expr
Rule 13    expr -> expr operator_bitxor expr
Rule 14    expr -> expr operator_bitshiftleft expr
Rule 15    expr -> expr operator_bitshiftright expr
Rule 16    expr -> expr operator_and expr
Rule 17    expr -> expr operator_or expr
Rule 18    expr -> expr operator_xor expr
Rule 19    expr -> expr operator_contains expr
Rule 20    expr -> operator_bitnot expr
Rule 21    expr -> operator_not expr
Rule 22    expr -> expr operator_incr
Rule 23    expr -> expr operator_decr
Rule 24    expr -> expr operator_outer expr expr
Rule 25    expr -> expr expr operator_inner expr expr
Rule 26    expr -> operator_reverse expr
Rule 27    expr -> expr operator_rotate expr
Rule 28    expr -> expr operator_apply expr
Rule 29    expr -> expr operator_compose expr
Rule 30    expr -> expr operator_over expr
Rule 31    expr -> expr operator_map
Rule 32    expr -> operator_sorted_incr expr
Rule 33    expr -> operator_sorted_decr expr
Rule 34    expr -> expr operator_less_than expr
Rule 35    expr -> expr operator_less_than_equals expr
Rule 36    expr -> expr operator_greater_than expr
Rule 37    expr -> expr operator_greater_than_equals expr
Rule 38    expr -> expr operator_equals expr
Rule 39    expr -> expr operator_not_equals expr
Rule 40    expr -> expr operator_smallest expr
Rule 41    expr -> expr operator_greatest expr
Rule 42    expr -> expr operator_goodname expr
Rule 43    expr -> operator_s_combinator expr expr expr
Rule 44    expr -> operator_goodname2 expr
Rule 45    expr -> const_val
Rule 46    expr -> VAR
Rule 47    arguments -> expr
Rule 48    arguments -> arguments , arguments
Rule 49    const_val -> NUM
Rule 50    const_val -> FLOAT
Rule 51    const_val -> STRING_3SQ
Rule 52    const_val -> STRING_3DQ
Rule 53    const_val -> STRING_SQ
Rule 54    const_val -> STRING_DQ
Rule 55    return_val -> type_type ( arguments )
Rule 56    return_val -> type_num ( arguments )
Rule 57    return_val -> type_any ( arguments )
Rule 58    return_val -> type_u64 ( arguments )
Rule 59    return_val -> type_u32 ( arguments )
Rule 60    return_val -> type_u16 ( arguments )
Rule 61    return_val -> type_u8 ( arguments )
Rule 62    return_val -> type_i64 ( arguments )
Rule 63    return_val -> type_i32 ( arguments )
Rule 64    return_val -> type_i16 ( arguments )
Rule 65    return_val -> type_i8 ( arguments )
Rule 66    return_val -> type_f32 ( arguments )
Rule 67    return_val -> type_f64 ( arguments )
Rule 68    return_val -> type_str ( arguments )
Rule 69    return_val -> type_list ( arguments )
Rule 70    return_val -> type_tuple ( arguments )
Rule 71    return_val -> type_array ( arguments )
Rule 72    return_val -> type_vector ( arguments )
Rule 73    return_val -> type_dict ( arguments )
Rule 74    return_val -> type_generator ( arguments )
Rule 75    return_val -> type_linked_list ( arguments )
Rule 76    return_val -> type_doubly_linked_list ( arguments )
Rule 77    return_val -> type_deque ( arguments )
Rule 78    return_val -> type_heap ( arguments )
Rule 79    return_val -> type_fibonacci_heap ( arguments )
Rule 80    return_val -> type_tree ( arguments )
Rule 81    return_val -> type_trie ( arguments )
Rule 82    return_val -> type_stack ( arguments )
Rule 83    return_val -> type_queue ( arguments )
Rule 84    return_val -> type_binary_search_tree ( arguments )
Rule 85    return_val -> type_bitset ( arguments )
Rule 86    return_val -> type_set ( arguments )
Rule 87    return_val -> type_map ( arguments )
Rule 88    return_val -> type_range ( arguments )

Terminals, with rules where they appear

(                    : 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88
)                    : 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88
,                    : 48
FLOAT                : 50
NUM                  : 49
STRING_3DQ           : 52
STRING_3SQ           : 51
STRING_DQ            : 54
STRING_SQ            : 53
VAR                  : 46
break                : 
continue             : 
del                  : 
elif                 : 
else                 : 
error                : 
false                : 
for                  : 
func                 : 
if                   : 
lambda               : 
operator             : 
operator_add         : 1
operator_and         : 16
operator_apply       : 28
operator_bitand      : 11
operator_bitnot      : 20
operator_bitor       : 12
operator_bitshiftleft : 14
operator_bitshiftright : 15
operator_bitxor      : 13
operator_compose     : 29
operator_contains    : 19
operator_decr        : 23
operator_div         : 4
operator_equals      : 38
operator_goodname    : 42
operator_goodname2   : 44
operator_greater_than : 36
operator_greater_than_equals : 37
operator_greatest    : 41
operator_incr        : 22
operator_inner       : 25
operator_join        : 7
operator_less_than   : 34
operator_less_than_equals : 35
operator_map         : 31
operator_mul         : 3
operator_not         : 21
operator_not_equals  : 39
operator_or          : 17
operator_outer       : 24
operator_over        : 30
operator_pow         : 6
operator_reduc       : 10
operator_reverse     : 26
operator_rotate      : 27
operator_s_combinator : 43
operator_scan        : 9
operator_smallest    : 40
operator_sorted_decr : 33
operator_sorted_incr : 32
operator_split       : 8
operator_sub         : 2
operator_trudiv      : 5
operator_xor         : 18
pass                 : 
return               : 
struct               : 
true                 : 
type_any             : 57
type_array           : 71
type_bad_struct      : 
type_binary_search_tree : 84
type_bitset          : 85
type_deque           : 77
type_dict            : 73
type_doubly_linked_list : 76
type_f32             : 66
type_f64             : 67
type_fibonacci_heap  : 79
type_generator       : 74
type_heap            : 78
type_i16             : 64
type_i32             : 63
type_i64             : 62
type_i8              : 65
type_linked_list     : 75
type_list            : 69
type_map             : 87
type_num             : 56
type_queue           : 83
type_range           : 88
type_set             : 86
type_stack           : 82
type_str             : 68
type_tree            : 80
type_trie            : 81
type_tuple           : 70
type_type            : 55
type_u16             : 60
type_u32             : 59
type_u64             : 58
type_u8              : 61
type_vector          : 72
while                : 

Nonterminals, with rules where they appear

arguments            : 48 48 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88
const_val            : 45
expr                 : 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 21 22 23 24 24 24 25 25 25 25 26 27 27 28 28 29 29 30 30 31 32 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 43 44 47 0
return_val           : 

Parsing method: LALR

state 0

    (0) S' -> . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 1
    const_val                      shift and go to state 9

state 1

    (0) S' -> expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 2

    (20) expr -> operator_bitnot . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 54
    const_val                      shift and go to state 9

state 3

    (21) expr -> operator_not . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 55
    const_val                      shift and go to state 9

state 4

    (26) expr -> operator_reverse . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 56
    const_val                      shift and go to state 9

state 5

    (32) expr -> operator_sorted_incr . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 57
    const_val                      shift and go to state 9

state 6

    (33) expr -> operator_sorted_decr . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 58
    const_val                      shift and go to state 9

state 7

    (43) expr -> operator_s_combinator . expr expr expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 59
    const_val                      shift and go to state 9

state 8

    (44) expr -> operator_goodname2 . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 60
    const_val                      shift and go to state 9

state 9

    (45) expr -> const_val .

    operator_add    reduce using rule 45 (expr -> const_val .)
    operator_sub    reduce using rule 45 (expr -> const_val .)
    operator_mul    reduce using rule 45 (expr -> const_val .)
    operator_div    reduce using rule 45 (expr -> const_val .)
    operator_trudiv reduce using rule 45 (expr -> const_val .)
    operator_pow    reduce using rule 45 (expr -> const_val .)
    operator_join   reduce using rule 45 (expr -> const_val .)
    operator_split  reduce using rule 45 (expr -> const_val .)
    operator_scan   reduce using rule 45 (expr -> const_val .)
    operator_reduc  reduce using rule 45 (expr -> const_val .)
    operator_bitand reduce using rule 45 (expr -> const_val .)
    operator_bitor  reduce using rule 45 (expr -> const_val .)
    operator_bitxor reduce using rule 45 (expr -> const_val .)
    operator_bitshiftleft reduce using rule 45 (expr -> const_val .)
    operator_bitshiftright reduce using rule 45 (expr -> const_val .)
    operator_and    reduce using rule 45 (expr -> const_val .)
    operator_or     reduce using rule 45 (expr -> const_val .)
    operator_xor    reduce using rule 45 (expr -> const_val .)
    operator_contains reduce using rule 45 (expr -> const_val .)
    operator_incr   reduce using rule 45 (expr -> const_val .)
    operator_decr   reduce using rule 45 (expr -> const_val .)
    operator_outer  reduce using rule 45 (expr -> const_val .)
    operator_rotate reduce using rule 45 (expr -> const_val .)
    operator_apply  reduce using rule 45 (expr -> const_val .)
    operator_compose reduce using rule 45 (expr -> const_val .)
    operator_over   reduce using rule 45 (expr -> const_val .)
    operator_map    reduce using rule 45 (expr -> const_val .)
    operator_less_than reduce using rule 45 (expr -> const_val .)
    operator_less_than_equals reduce using rule 45 (expr -> const_val .)
    operator_greater_than reduce using rule 45 (expr -> const_val .)
    operator_greater_than_equals reduce using rule 45 (expr -> const_val .)
    operator_equals reduce using rule 45 (expr -> const_val .)
    operator_not_equals reduce using rule 45 (expr -> const_val .)
    operator_smallest reduce using rule 45 (expr -> const_val .)
    operator_greatest reduce using rule 45 (expr -> const_val .)
    operator_goodname reduce using rule 45 (expr -> const_val .)
    operator_bitnot reduce using rule 45 (expr -> const_val .)
    operator_not    reduce using rule 45 (expr -> const_val .)
    operator_reverse reduce using rule 45 (expr -> const_val .)
    operator_sorted_incr reduce using rule 45 (expr -> const_val .)
    operator_sorted_decr reduce using rule 45 (expr -> const_val .)
    operator_s_combinator reduce using rule 45 (expr -> const_val .)
    operator_goodname2 reduce using rule 45 (expr -> const_val .)
    VAR             reduce using rule 45 (expr -> const_val .)
    NUM             reduce using rule 45 (expr -> const_val .)
    FLOAT           reduce using rule 45 (expr -> const_val .)
    STRING_3SQ      reduce using rule 45 (expr -> const_val .)
    STRING_3DQ      reduce using rule 45 (expr -> const_val .)
    STRING_SQ       reduce using rule 45 (expr -> const_val .)
    STRING_DQ       reduce using rule 45 (expr -> const_val .)
    $end            reduce using rule 45 (expr -> const_val .)
    operator_inner  reduce using rule 45 (expr -> const_val .)


state 10

    (46) expr -> VAR .

    operator_add    reduce using rule 46 (expr -> VAR .)
    operator_sub    reduce using rule 46 (expr -> VAR .)
    operator_mul    reduce using rule 46 (expr -> VAR .)
    operator_div    reduce using rule 46 (expr -> VAR .)
    operator_trudiv reduce using rule 46 (expr -> VAR .)
    operator_pow    reduce using rule 46 (expr -> VAR .)
    operator_join   reduce using rule 46 (expr -> VAR .)
    operator_split  reduce using rule 46 (expr -> VAR .)
    operator_scan   reduce using rule 46 (expr -> VAR .)
    operator_reduc  reduce using rule 46 (expr -> VAR .)
    operator_bitand reduce using rule 46 (expr -> VAR .)
    operator_bitor  reduce using rule 46 (expr -> VAR .)
    operator_bitxor reduce using rule 46 (expr -> VAR .)
    operator_bitshiftleft reduce using rule 46 (expr -> VAR .)
    operator_bitshiftright reduce using rule 46 (expr -> VAR .)
    operator_and    reduce using rule 46 (expr -> VAR .)
    operator_or     reduce using rule 46 (expr -> VAR .)
    operator_xor    reduce using rule 46 (expr -> VAR .)
    operator_contains reduce using rule 46 (expr -> VAR .)
    operator_incr   reduce using rule 46 (expr -> VAR .)
    operator_decr   reduce using rule 46 (expr -> VAR .)
    operator_outer  reduce using rule 46 (expr -> VAR .)
    operator_rotate reduce using rule 46 (expr -> VAR .)
    operator_apply  reduce using rule 46 (expr -> VAR .)
    operator_compose reduce using rule 46 (expr -> VAR .)
    operator_over   reduce using rule 46 (expr -> VAR .)
    operator_map    reduce using rule 46 (expr -> VAR .)
    operator_less_than reduce using rule 46 (expr -> VAR .)
    operator_less_than_equals reduce using rule 46 (expr -> VAR .)
    operator_greater_than reduce using rule 46 (expr -> VAR .)
    operator_greater_than_equals reduce using rule 46 (expr -> VAR .)
    operator_equals reduce using rule 46 (expr -> VAR .)
    operator_not_equals reduce using rule 46 (expr -> VAR .)
    operator_smallest reduce using rule 46 (expr -> VAR .)
    operator_greatest reduce using rule 46 (expr -> VAR .)
    operator_goodname reduce using rule 46 (expr -> VAR .)
    operator_bitnot reduce using rule 46 (expr -> VAR .)
    operator_not    reduce using rule 46 (expr -> VAR .)
    operator_reverse reduce using rule 46 (expr -> VAR .)
    operator_sorted_incr reduce using rule 46 (expr -> VAR .)
    operator_sorted_decr reduce using rule 46 (expr -> VAR .)
    operator_s_combinator reduce using rule 46 (expr -> VAR .)
    operator_goodname2 reduce using rule 46 (expr -> VAR .)
    VAR             reduce using rule 46 (expr -> VAR .)
    NUM             reduce using rule 46 (expr -> VAR .)
    FLOAT           reduce using rule 46 (expr -> VAR .)
    STRING_3SQ      reduce using rule 46 (expr -> VAR .)
    STRING_3DQ      reduce using rule 46 (expr -> VAR .)
    STRING_SQ       reduce using rule 46 (expr -> VAR .)
    STRING_DQ       reduce using rule 46 (expr -> VAR .)
    $end            reduce using rule 46 (expr -> VAR .)
    operator_inner  reduce using rule 46 (expr -> VAR .)


state 11

    (49) const_val -> NUM .

    operator_add    reduce using rule 49 (const_val -> NUM .)
    operator_sub    reduce using rule 49 (const_val -> NUM .)
    operator_mul    reduce using rule 49 (const_val -> NUM .)
    operator_div    reduce using rule 49 (const_val -> NUM .)
    operator_trudiv reduce using rule 49 (const_val -> NUM .)
    operator_pow    reduce using rule 49 (const_val -> NUM .)
    operator_join   reduce using rule 49 (const_val -> NUM .)
    operator_split  reduce using rule 49 (const_val -> NUM .)
    operator_scan   reduce using rule 49 (const_val -> NUM .)
    operator_reduc  reduce using rule 49 (const_val -> NUM .)
    operator_bitand reduce using rule 49 (const_val -> NUM .)
    operator_bitor  reduce using rule 49 (const_val -> NUM .)
    operator_bitxor reduce using rule 49 (const_val -> NUM .)
    operator_bitshiftleft reduce using rule 49 (const_val -> NUM .)
    operator_bitshiftright reduce using rule 49 (const_val -> NUM .)
    operator_and    reduce using rule 49 (const_val -> NUM .)
    operator_or     reduce using rule 49 (const_val -> NUM .)
    operator_xor    reduce using rule 49 (const_val -> NUM .)
    operator_contains reduce using rule 49 (const_val -> NUM .)
    operator_incr   reduce using rule 49 (const_val -> NUM .)
    operator_decr   reduce using rule 49 (const_val -> NUM .)
    operator_outer  reduce using rule 49 (const_val -> NUM .)
    operator_rotate reduce using rule 49 (const_val -> NUM .)
    operator_apply  reduce using rule 49 (const_val -> NUM .)
    operator_compose reduce using rule 49 (const_val -> NUM .)
    operator_over   reduce using rule 49 (const_val -> NUM .)
    operator_map    reduce using rule 49 (const_val -> NUM .)
    operator_less_than reduce using rule 49 (const_val -> NUM .)
    operator_less_than_equals reduce using rule 49 (const_val -> NUM .)
    operator_greater_than reduce using rule 49 (const_val -> NUM .)
    operator_greater_than_equals reduce using rule 49 (const_val -> NUM .)
    operator_equals reduce using rule 49 (const_val -> NUM .)
    operator_not_equals reduce using rule 49 (const_val -> NUM .)
    operator_smallest reduce using rule 49 (const_val -> NUM .)
    operator_greatest reduce using rule 49 (const_val -> NUM .)
    operator_goodname reduce using rule 49 (const_val -> NUM .)
    operator_bitnot reduce using rule 49 (const_val -> NUM .)
    operator_not    reduce using rule 49 (const_val -> NUM .)
    operator_reverse reduce using rule 49 (const_val -> NUM .)
    operator_sorted_incr reduce using rule 49 (const_val -> NUM .)
    operator_sorted_decr reduce using rule 49 (const_val -> NUM .)
    operator_s_combinator reduce using rule 49 (const_val -> NUM .)
    operator_goodname2 reduce using rule 49 (const_val -> NUM .)
    VAR             reduce using rule 49 (const_val -> NUM .)
    NUM             reduce using rule 49 (const_val -> NUM .)
    FLOAT           reduce using rule 49 (const_val -> NUM .)
    STRING_3SQ      reduce using rule 49 (const_val -> NUM .)
    STRING_3DQ      reduce using rule 49 (const_val -> NUM .)
    STRING_SQ       reduce using rule 49 (const_val -> NUM .)
    STRING_DQ       reduce using rule 49 (const_val -> NUM .)
    $end            reduce using rule 49 (const_val -> NUM .)
    operator_inner  reduce using rule 49 (const_val -> NUM .)


state 12

    (50) const_val -> FLOAT .

    operator_add    reduce using rule 50 (const_val -> FLOAT .)
    operator_sub    reduce using rule 50 (const_val -> FLOAT .)
    operator_mul    reduce using rule 50 (const_val -> FLOAT .)
    operator_div    reduce using rule 50 (const_val -> FLOAT .)
    operator_trudiv reduce using rule 50 (const_val -> FLOAT .)
    operator_pow    reduce using rule 50 (const_val -> FLOAT .)
    operator_join   reduce using rule 50 (const_val -> FLOAT .)
    operator_split  reduce using rule 50 (const_val -> FLOAT .)
    operator_scan   reduce using rule 50 (const_val -> FLOAT .)
    operator_reduc  reduce using rule 50 (const_val -> FLOAT .)
    operator_bitand reduce using rule 50 (const_val -> FLOAT .)
    operator_bitor  reduce using rule 50 (const_val -> FLOAT .)
    operator_bitxor reduce using rule 50 (const_val -> FLOAT .)
    operator_bitshiftleft reduce using rule 50 (const_val -> FLOAT .)
    operator_bitshiftright reduce using rule 50 (const_val -> FLOAT .)
    operator_and    reduce using rule 50 (const_val -> FLOAT .)
    operator_or     reduce using rule 50 (const_val -> FLOAT .)
    operator_xor    reduce using rule 50 (const_val -> FLOAT .)
    operator_contains reduce using rule 50 (const_val -> FLOAT .)
    operator_incr   reduce using rule 50 (const_val -> FLOAT .)
    operator_decr   reduce using rule 50 (const_val -> FLOAT .)
    operator_outer  reduce using rule 50 (const_val -> FLOAT .)
    operator_rotate reduce using rule 50 (const_val -> FLOAT .)
    operator_apply  reduce using rule 50 (const_val -> FLOAT .)
    operator_compose reduce using rule 50 (const_val -> FLOAT .)
    operator_over   reduce using rule 50 (const_val -> FLOAT .)
    operator_map    reduce using rule 50 (const_val -> FLOAT .)
    operator_less_than reduce using rule 50 (const_val -> FLOAT .)
    operator_less_than_equals reduce using rule 50 (const_val -> FLOAT .)
    operator_greater_than reduce using rule 50 (const_val -> FLOAT .)
    operator_greater_than_equals reduce using rule 50 (const_val -> FLOAT .)
    operator_equals reduce using rule 50 (const_val -> FLOAT .)
    operator_not_equals reduce using rule 50 (const_val -> FLOAT .)
    operator_smallest reduce using rule 50 (const_val -> FLOAT .)
    operator_greatest reduce using rule 50 (const_val -> FLOAT .)
    operator_goodname reduce using rule 50 (const_val -> FLOAT .)
    operator_bitnot reduce using rule 50 (const_val -> FLOAT .)
    operator_not    reduce using rule 50 (const_val -> FLOAT .)
    operator_reverse reduce using rule 50 (const_val -> FLOAT .)
    operator_sorted_incr reduce using rule 50 (const_val -> FLOAT .)
    operator_sorted_decr reduce using rule 50 (const_val -> FLOAT .)
    operator_s_combinator reduce using rule 50 (const_val -> FLOAT .)
    operator_goodname2 reduce using rule 50 (const_val -> FLOAT .)
    VAR             reduce using rule 50 (const_val -> FLOAT .)
    NUM             reduce using rule 50 (const_val -> FLOAT .)
    FLOAT           reduce using rule 50 (const_val -> FLOAT .)
    STRING_3SQ      reduce using rule 50 (const_val -> FLOAT .)
    STRING_3DQ      reduce using rule 50 (const_val -> FLOAT .)
    STRING_SQ       reduce using rule 50 (const_val -> FLOAT .)
    STRING_DQ       reduce using rule 50 (const_val -> FLOAT .)
    $end            reduce using rule 50 (const_val -> FLOAT .)
    operator_inner  reduce using rule 50 (const_val -> FLOAT .)


state 13

    (51) const_val -> STRING_3SQ .

    operator_add    reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_sub    reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_mul    reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_div    reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_trudiv reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_pow    reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_join   reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_split  reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_scan   reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_reduc  reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_bitand reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_bitor  reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_bitxor reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_bitshiftleft reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_bitshiftright reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_and    reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_or     reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_xor    reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_contains reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_incr   reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_decr   reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_outer  reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_rotate reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_apply  reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_compose reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_over   reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_map    reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_less_than reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_less_than_equals reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_greater_than reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_greater_than_equals reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_equals reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_not_equals reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_smallest reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_greatest reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_goodname reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_bitnot reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_not    reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_reverse reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_sorted_incr reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_sorted_decr reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_s_combinator reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_goodname2 reduce using rule 51 (const_val -> STRING_3SQ .)
    VAR             reduce using rule 51 (const_val -> STRING_3SQ .)
    NUM             reduce using rule 51 (const_val -> STRING_3SQ .)
    FLOAT           reduce using rule 51 (const_val -> STRING_3SQ .)
    STRING_3SQ      reduce using rule 51 (const_val -> STRING_3SQ .)
    STRING_3DQ      reduce using rule 51 (const_val -> STRING_3SQ .)
    STRING_SQ       reduce using rule 51 (const_val -> STRING_3SQ .)
    STRING_DQ       reduce using rule 51 (const_val -> STRING_3SQ .)
    $end            reduce using rule 51 (const_val -> STRING_3SQ .)
    operator_inner  reduce using rule 51 (const_val -> STRING_3SQ .)


state 14

    (52) const_val -> STRING_3DQ .

    operator_add    reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_sub    reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_mul    reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_div    reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_trudiv reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_pow    reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_join   reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_split  reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_scan   reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_reduc  reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_bitand reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_bitor  reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_bitxor reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_bitshiftleft reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_bitshiftright reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_and    reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_or     reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_xor    reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_contains reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_incr   reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_decr   reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_outer  reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_rotate reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_apply  reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_compose reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_over   reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_map    reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_less_than reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_less_than_equals reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_greater_than reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_greater_than_equals reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_equals reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_not_equals reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_smallest reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_greatest reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_goodname reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_bitnot reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_not    reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_reverse reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_sorted_incr reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_sorted_decr reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_s_combinator reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_goodname2 reduce using rule 52 (const_val -> STRING_3DQ .)
    VAR             reduce using rule 52 (const_val -> STRING_3DQ .)
    NUM             reduce using rule 52 (const_val -> STRING_3DQ .)
    FLOAT           reduce using rule 52 (const_val -> STRING_3DQ .)
    STRING_3SQ      reduce using rule 52 (const_val -> STRING_3DQ .)
    STRING_3DQ      reduce using rule 52 (const_val -> STRING_3DQ .)
    STRING_SQ       reduce using rule 52 (const_val -> STRING_3DQ .)
    STRING_DQ       reduce using rule 52 (const_val -> STRING_3DQ .)
    $end            reduce using rule 52 (const_val -> STRING_3DQ .)
    operator_inner  reduce using rule 52 (const_val -> STRING_3DQ .)


state 15

    (53) const_val -> STRING_SQ .

    operator_add    reduce using rule 53 (const_val -> STRING_SQ .)
    operator_sub    reduce using rule 53 (const_val -> STRING_SQ .)
    operator_mul    reduce using rule 53 (const_val -> STRING_SQ .)
    operator_div    reduce using rule 53 (const_val -> STRING_SQ .)
    operator_trudiv reduce using rule 53 (const_val -> STRING_SQ .)
    operator_pow    reduce using rule 53 (const_val -> STRING_SQ .)
    operator_join   reduce using rule 53 (const_val -> STRING_SQ .)
    operator_split  reduce using rule 53 (const_val -> STRING_SQ .)
    operator_scan   reduce using rule 53 (const_val -> STRING_SQ .)
    operator_reduc  reduce using rule 53 (const_val -> STRING_SQ .)
    operator_bitand reduce using rule 53 (const_val -> STRING_SQ .)
    operator_bitor  reduce using rule 53 (const_val -> STRING_SQ .)
    operator_bitxor reduce using rule 53 (const_val -> STRING_SQ .)
    operator_bitshiftleft reduce using rule 53 (const_val -> STRING_SQ .)
    operator_bitshiftright reduce using rule 53 (const_val -> STRING_SQ .)
    operator_and    reduce using rule 53 (const_val -> STRING_SQ .)
    operator_or     reduce using rule 53 (const_val -> STRING_SQ .)
    operator_xor    reduce using rule 53 (const_val -> STRING_SQ .)
    operator_contains reduce using rule 53 (const_val -> STRING_SQ .)
    operator_incr   reduce using rule 53 (const_val -> STRING_SQ .)
    operator_decr   reduce using rule 53 (const_val -> STRING_SQ .)
    operator_outer  reduce using rule 53 (const_val -> STRING_SQ .)
    operator_rotate reduce using rule 53 (const_val -> STRING_SQ .)
    operator_apply  reduce using rule 53 (const_val -> STRING_SQ .)
    operator_compose reduce using rule 53 (const_val -> STRING_SQ .)
    operator_over   reduce using rule 53 (const_val -> STRING_SQ .)
    operator_map    reduce using rule 53 (const_val -> STRING_SQ .)
    operator_less_than reduce using rule 53 (const_val -> STRING_SQ .)
    operator_less_than_equals reduce using rule 53 (const_val -> STRING_SQ .)
    operator_greater_than reduce using rule 53 (const_val -> STRING_SQ .)
    operator_greater_than_equals reduce using rule 53 (const_val -> STRING_SQ .)
    operator_equals reduce using rule 53 (const_val -> STRING_SQ .)
    operator_not_equals reduce using rule 53 (const_val -> STRING_SQ .)
    operator_smallest reduce using rule 53 (const_val -> STRING_SQ .)
    operator_greatest reduce using rule 53 (const_val -> STRING_SQ .)
    operator_goodname reduce using rule 53 (const_val -> STRING_SQ .)
    operator_bitnot reduce using rule 53 (const_val -> STRING_SQ .)
    operator_not    reduce using rule 53 (const_val -> STRING_SQ .)
    operator_reverse reduce using rule 53 (const_val -> STRING_SQ .)
    operator_sorted_incr reduce using rule 53 (const_val -> STRING_SQ .)
    operator_sorted_decr reduce using rule 53 (const_val -> STRING_SQ .)
    operator_s_combinator reduce using rule 53 (const_val -> STRING_SQ .)
    operator_goodname2 reduce using rule 53 (const_val -> STRING_SQ .)
    VAR             reduce using rule 53 (const_val -> STRING_SQ .)
    NUM             reduce using rule 53 (const_val -> STRING_SQ .)
    FLOAT           reduce using rule 53 (const_val -> STRING_SQ .)
    STRING_3SQ      reduce using rule 53 (const_val -> STRING_SQ .)
    STRING_3DQ      reduce using rule 53 (const_val -> STRING_SQ .)
    STRING_SQ       reduce using rule 53 (const_val -> STRING_SQ .)
    STRING_DQ       reduce using rule 53 (const_val -> STRING_SQ .)
    $end            reduce using rule 53 (const_val -> STRING_SQ .)
    operator_inner  reduce using rule 53 (const_val -> STRING_SQ .)


state 16

    (54) const_val -> STRING_DQ .

    operator_add    reduce using rule 54 (const_val -> STRING_DQ .)
    operator_sub    reduce using rule 54 (const_val -> STRING_DQ .)
    operator_mul    reduce using rule 54 (const_val -> STRING_DQ .)
    operator_div    reduce using rule 54 (const_val -> STRING_DQ .)
    operator_trudiv reduce using rule 54 (const_val -> STRING_DQ .)
    operator_pow    reduce using rule 54 (const_val -> STRING_DQ .)
    operator_join   reduce using rule 54 (const_val -> STRING_DQ .)
    operator_split  reduce using rule 54 (const_val -> STRING_DQ .)
    operator_scan   reduce using rule 54 (const_val -> STRING_DQ .)
    operator_reduc  reduce using rule 54 (const_val -> STRING_DQ .)
    operator_bitand reduce using rule 54 (const_val -> STRING_DQ .)
    operator_bitor  reduce using rule 54 (const_val -> STRING_DQ .)
    operator_bitxor reduce using rule 54 (const_val -> STRING_DQ .)
    operator_bitshiftleft reduce using rule 54 (const_val -> STRING_DQ .)
    operator_bitshiftright reduce using rule 54 (const_val -> STRING_DQ .)
    operator_and    reduce using rule 54 (const_val -> STRING_DQ .)
    operator_or     reduce using rule 54 (const_val -> STRING_DQ .)
    operator_xor    reduce using rule 54 (const_val -> STRING_DQ .)
    operator_contains reduce using rule 54 (const_val -> STRING_DQ .)
    operator_incr   reduce using rule 54 (const_val -> STRING_DQ .)
    operator_decr   reduce using rule 54 (const_val -> STRING_DQ .)
    operator_outer  reduce using rule 54 (const_val -> STRING_DQ .)
    operator_rotate reduce using rule 54 (const_val -> STRING_DQ .)
    operator_apply  reduce using rule 54 (const_val -> STRING_DQ .)
    operator_compose reduce using rule 54 (const_val -> STRING_DQ .)
    operator_over   reduce using rule 54 (const_val -> STRING_DQ .)
    operator_map    reduce using rule 54 (const_val -> STRING_DQ .)
    operator_less_than reduce using rule 54 (const_val -> STRING_DQ .)
    operator_less_than_equals reduce using rule 54 (const_val -> STRING_DQ .)
    operator_greater_than reduce using rule 54 (const_val -> STRING_DQ .)
    operator_greater_than_equals reduce using rule 54 (const_val -> STRING_DQ .)
    operator_equals reduce using rule 54 (const_val -> STRING_DQ .)
    operator_not_equals reduce using rule 54 (const_val -> STRING_DQ .)
    operator_smallest reduce using rule 54 (const_val -> STRING_DQ .)
    operator_greatest reduce using rule 54 (const_val -> STRING_DQ .)
    operator_goodname reduce using rule 54 (const_val -> STRING_DQ .)
    operator_bitnot reduce using rule 54 (const_val -> STRING_DQ .)
    operator_not    reduce using rule 54 (const_val -> STRING_DQ .)
    operator_reverse reduce using rule 54 (const_val -> STRING_DQ .)
    operator_sorted_incr reduce using rule 54 (const_val -> STRING_DQ .)
    operator_sorted_decr reduce using rule 54 (const_val -> STRING_DQ .)
    operator_s_combinator reduce using rule 54 (const_val -> STRING_DQ .)
    operator_goodname2 reduce using rule 54 (const_val -> STRING_DQ .)
    VAR             reduce using rule 54 (const_val -> STRING_DQ .)
    NUM             reduce using rule 54 (const_val -> STRING_DQ .)
    FLOAT           reduce using rule 54 (const_val -> STRING_DQ .)
    STRING_3SQ      reduce using rule 54 (const_val -> STRING_DQ .)
    STRING_3DQ      reduce using rule 54 (const_val -> STRING_DQ .)
    STRING_SQ       reduce using rule 54 (const_val -> STRING_DQ .)
    STRING_DQ       reduce using rule 54 (const_val -> STRING_DQ .)
    $end            reduce using rule 54 (const_val -> STRING_DQ .)
    operator_inner  reduce using rule 54 (const_val -> STRING_DQ .)


state 17

    (25) expr -> expr expr . operator_inner expr expr
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_inner  shift and go to state 61
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 18

    (1) expr -> expr operator_add . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 62
    const_val                      shift and go to state 9

state 19

    (2) expr -> expr operator_sub . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 63
    const_val                      shift and go to state 9

state 20

    (3) expr -> expr operator_mul . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 64
    const_val                      shift and go to state 9

state 21

    (4) expr -> expr operator_div . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 65
    const_val                      shift and go to state 9

state 22

    (5) expr -> expr operator_trudiv . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 66
    const_val                      shift and go to state 9

state 23

    (6) expr -> expr operator_pow . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 67
    const_val                      shift and go to state 9

state 24

    (7) expr -> expr operator_join . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 68
    const_val                      shift and go to state 9

state 25

    (8) expr -> expr operator_split . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 69
    const_val                      shift and go to state 9

state 26

    (9) expr -> expr operator_scan . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 70
    const_val                      shift and go to state 9

state 27

    (10) expr -> expr operator_reduc . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 71
    const_val                      shift and go to state 9

state 28

    (11) expr -> expr operator_bitand . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 72
    const_val                      shift and go to state 9

state 29

    (12) expr -> expr operator_bitor . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 73
    const_val                      shift and go to state 9

state 30

    (13) expr -> expr operator_bitxor . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 74
    const_val                      shift and go to state 9

state 31

    (14) expr -> expr operator_bitshiftleft . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 75
    const_val                      shift and go to state 9

state 32

    (15) expr -> expr operator_bitshiftright . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 76
    const_val                      shift and go to state 9

state 33

    (16) expr -> expr operator_and . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 77
    const_val                      shift and go to state 9

state 34

    (17) expr -> expr operator_or . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 78
    const_val                      shift and go to state 9

state 35

    (18) expr -> expr operator_xor . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 79
    const_val                      shift and go to state 9

state 36

    (19) expr -> expr operator_contains . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 80
    const_val                      shift and go to state 9

state 37

    (22) expr -> expr operator_incr .

    operator_add    reduce using rule 22 (expr -> expr operator_incr .)
    operator_sub    reduce using rule 22 (expr -> expr operator_incr .)
    operator_mul    reduce using rule 22 (expr -> expr operator_incr .)
    operator_div    reduce using rule 22 (expr -> expr operator_incr .)
    operator_trudiv reduce using rule 22 (expr -> expr operator_incr .)
    operator_pow    reduce using rule 22 (expr -> expr operator_incr .)
    operator_join   reduce using rule 22 (expr -> expr operator_incr .)
    operator_split  reduce using rule 22 (expr -> expr operator_incr .)
    operator_scan   reduce using rule 22 (expr -> expr operator_incr .)
    operator_reduc  reduce using rule 22 (expr -> expr operator_incr .)
    operator_bitand reduce using rule 22 (expr -> expr operator_incr .)
    operator_bitor  reduce using rule 22 (expr -> expr operator_incr .)
    operator_bitxor reduce using rule 22 (expr -> expr operator_incr .)
    operator_bitshiftleft reduce using rule 22 (expr -> expr operator_incr .)
    operator_bitshiftright reduce using rule 22 (expr -> expr operator_incr .)
    operator_and    reduce using rule 22 (expr -> expr operator_incr .)
    operator_or     reduce using rule 22 (expr -> expr operator_incr .)
    operator_xor    reduce using rule 22 (expr -> expr operator_incr .)
    operator_contains reduce using rule 22 (expr -> expr operator_incr .)
    operator_incr   reduce using rule 22 (expr -> expr operator_incr .)
    operator_decr   reduce using rule 22 (expr -> expr operator_incr .)
    operator_outer  reduce using rule 22 (expr -> expr operator_incr .)
    operator_rotate reduce using rule 22 (expr -> expr operator_incr .)
    operator_apply  reduce using rule 22 (expr -> expr operator_incr .)
    operator_compose reduce using rule 22 (expr -> expr operator_incr .)
    operator_over   reduce using rule 22 (expr -> expr operator_incr .)
    operator_map    reduce using rule 22 (expr -> expr operator_incr .)
    operator_less_than reduce using rule 22 (expr -> expr operator_incr .)
    operator_less_than_equals reduce using rule 22 (expr -> expr operator_incr .)
    operator_greater_than reduce using rule 22 (expr -> expr operator_incr .)
    operator_greater_than_equals reduce using rule 22 (expr -> expr operator_incr .)
    operator_equals reduce using rule 22 (expr -> expr operator_incr .)
    operator_not_equals reduce using rule 22 (expr -> expr operator_incr .)
    operator_smallest reduce using rule 22 (expr -> expr operator_incr .)
    operator_greatest reduce using rule 22 (expr -> expr operator_incr .)
    operator_goodname reduce using rule 22 (expr -> expr operator_incr .)
    operator_bitnot reduce using rule 22 (expr -> expr operator_incr .)
    operator_not    reduce using rule 22 (expr -> expr operator_incr .)
    operator_reverse reduce using rule 22 (expr -> expr operator_incr .)
    operator_sorted_incr reduce using rule 22 (expr -> expr operator_incr .)
    operator_sorted_decr reduce using rule 22 (expr -> expr operator_incr .)
    operator_s_combinator reduce using rule 22 (expr -> expr operator_incr .)
    operator_goodname2 reduce using rule 22 (expr -> expr operator_incr .)
    VAR             reduce using rule 22 (expr -> expr operator_incr .)
    NUM             reduce using rule 22 (expr -> expr operator_incr .)
    FLOAT           reduce using rule 22 (expr -> expr operator_incr .)
    STRING_3SQ      reduce using rule 22 (expr -> expr operator_incr .)
    STRING_3DQ      reduce using rule 22 (expr -> expr operator_incr .)
    STRING_SQ       reduce using rule 22 (expr -> expr operator_incr .)
    STRING_DQ       reduce using rule 22 (expr -> expr operator_incr .)
    $end            reduce using rule 22 (expr -> expr operator_incr .)
    operator_inner  reduce using rule 22 (expr -> expr operator_incr .)


state 38

    (23) expr -> expr operator_decr .

    operator_add    reduce using rule 23 (expr -> expr operator_decr .)
    operator_sub    reduce using rule 23 (expr -> expr operator_decr .)
    operator_mul    reduce using rule 23 (expr -> expr operator_decr .)
    operator_div    reduce using rule 23 (expr -> expr operator_decr .)
    operator_trudiv reduce using rule 23 (expr -> expr operator_decr .)
    operator_pow    reduce using rule 23 (expr -> expr operator_decr .)
    operator_join   reduce using rule 23 (expr -> expr operator_decr .)
    operator_split  reduce using rule 23 (expr -> expr operator_decr .)
    operator_scan   reduce using rule 23 (expr -> expr operator_decr .)
    operator_reduc  reduce using rule 23 (expr -> expr operator_decr .)
    operator_bitand reduce using rule 23 (expr -> expr operator_decr .)
    operator_bitor  reduce using rule 23 (expr -> expr operator_decr .)
    operator_bitxor reduce using rule 23 (expr -> expr operator_decr .)
    operator_bitshiftleft reduce using rule 23 (expr -> expr operator_decr .)
    operator_bitshiftright reduce using rule 23 (expr -> expr operator_decr .)
    operator_and    reduce using rule 23 (expr -> expr operator_decr .)
    operator_or     reduce using rule 23 (expr -> expr operator_decr .)
    operator_xor    reduce using rule 23 (expr -> expr operator_decr .)
    operator_contains reduce using rule 23 (expr -> expr operator_decr .)
    operator_incr   reduce using rule 23 (expr -> expr operator_decr .)
    operator_decr   reduce using rule 23 (expr -> expr operator_decr .)
    operator_outer  reduce using rule 23 (expr -> expr operator_decr .)
    operator_rotate reduce using rule 23 (expr -> expr operator_decr .)
    operator_apply  reduce using rule 23 (expr -> expr operator_decr .)
    operator_compose reduce using rule 23 (expr -> expr operator_decr .)
    operator_over   reduce using rule 23 (expr -> expr operator_decr .)
    operator_map    reduce using rule 23 (expr -> expr operator_decr .)
    operator_less_than reduce using rule 23 (expr -> expr operator_decr .)
    operator_less_than_equals reduce using rule 23 (expr -> expr operator_decr .)
    operator_greater_than reduce using rule 23 (expr -> expr operator_decr .)
    operator_greater_than_equals reduce using rule 23 (expr -> expr operator_decr .)
    operator_equals reduce using rule 23 (expr -> expr operator_decr .)
    operator_not_equals reduce using rule 23 (expr -> expr operator_decr .)
    operator_smallest reduce using rule 23 (expr -> expr operator_decr .)
    operator_greatest reduce using rule 23 (expr -> expr operator_decr .)
    operator_goodname reduce using rule 23 (expr -> expr operator_decr .)
    operator_bitnot reduce using rule 23 (expr -> expr operator_decr .)
    operator_not    reduce using rule 23 (expr -> expr operator_decr .)
    operator_reverse reduce using rule 23 (expr -> expr operator_decr .)
    operator_sorted_incr reduce using rule 23 (expr -> expr operator_decr .)
    operator_sorted_decr reduce using rule 23 (expr -> expr operator_decr .)
    operator_s_combinator reduce using rule 23 (expr -> expr operator_decr .)
    operator_goodname2 reduce using rule 23 (expr -> expr operator_decr .)
    VAR             reduce using rule 23 (expr -> expr operator_decr .)
    NUM             reduce using rule 23 (expr -> expr operator_decr .)
    FLOAT           reduce using rule 23 (expr -> expr operator_decr .)
    STRING_3SQ      reduce using rule 23 (expr -> expr operator_decr .)
    STRING_3DQ      reduce using rule 23 (expr -> expr operator_decr .)
    STRING_SQ       reduce using rule 23 (expr -> expr operator_decr .)
    STRING_DQ       reduce using rule 23 (expr -> expr operator_decr .)
    $end            reduce using rule 23 (expr -> expr operator_decr .)
    operator_inner  reduce using rule 23 (expr -> expr operator_decr .)


state 39

    (24) expr -> expr operator_outer . expr expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 81
    const_val                      shift and go to state 9

state 40

    (27) expr -> expr operator_rotate . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 82
    const_val                      shift and go to state 9

state 41

    (28) expr -> expr operator_apply . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 83
    const_val                      shift and go to state 9

state 42

    (29) expr -> expr operator_compose . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 84
    const_val                      shift and go to state 9

state 43

    (30) expr -> expr operator_over . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 85
    const_val                      shift and go to state 9

state 44

    (31) expr -> expr operator_map .

    operator_add    reduce using rule 31 (expr -> expr operator_map .)
    operator_sub    reduce using rule 31 (expr -> expr operator_map .)
    operator_mul    reduce using rule 31 (expr -> expr operator_map .)
    operator_div    reduce using rule 31 (expr -> expr operator_map .)
    operator_trudiv reduce using rule 31 (expr -> expr operator_map .)
    operator_pow    reduce using rule 31 (expr -> expr operator_map .)
    operator_join   reduce using rule 31 (expr -> expr operator_map .)
    operator_split  reduce using rule 31 (expr -> expr operator_map .)
    operator_scan   reduce using rule 31 (expr -> expr operator_map .)
    operator_reduc  reduce using rule 31 (expr -> expr operator_map .)
    operator_bitand reduce using rule 31 (expr -> expr operator_map .)
    operator_bitor  reduce using rule 31 (expr -> expr operator_map .)
    operator_bitxor reduce using rule 31 (expr -> expr operator_map .)
    operator_bitshiftleft reduce using rule 31 (expr -> expr operator_map .)
    operator_bitshiftright reduce using rule 31 (expr -> expr operator_map .)
    operator_and    reduce using rule 31 (expr -> expr operator_map .)
    operator_or     reduce using rule 31 (expr -> expr operator_map .)
    operator_xor    reduce using rule 31 (expr -> expr operator_map .)
    operator_contains reduce using rule 31 (expr -> expr operator_map .)
    operator_incr   reduce using rule 31 (expr -> expr operator_map .)
    operator_decr   reduce using rule 31 (expr -> expr operator_map .)
    operator_outer  reduce using rule 31 (expr -> expr operator_map .)
    operator_rotate reduce using rule 31 (expr -> expr operator_map .)
    operator_apply  reduce using rule 31 (expr -> expr operator_map .)
    operator_compose reduce using rule 31 (expr -> expr operator_map .)
    operator_over   reduce using rule 31 (expr -> expr operator_map .)
    operator_map    reduce using rule 31 (expr -> expr operator_map .)
    operator_less_than reduce using rule 31 (expr -> expr operator_map .)
    operator_less_than_equals reduce using rule 31 (expr -> expr operator_map .)
    operator_greater_than reduce using rule 31 (expr -> expr operator_map .)
    operator_greater_than_equals reduce using rule 31 (expr -> expr operator_map .)
    operator_equals reduce using rule 31 (expr -> expr operator_map .)
    operator_not_equals reduce using rule 31 (expr -> expr operator_map .)
    operator_smallest reduce using rule 31 (expr -> expr operator_map .)
    operator_greatest reduce using rule 31 (expr -> expr operator_map .)
    operator_goodname reduce using rule 31 (expr -> expr operator_map .)
    operator_bitnot reduce using rule 31 (expr -> expr operator_map .)
    operator_not    reduce using rule 31 (expr -> expr operator_map .)
    operator_reverse reduce using rule 31 (expr -> expr operator_map .)
    operator_sorted_incr reduce using rule 31 (expr -> expr operator_map .)
    operator_sorted_decr reduce using rule 31 (expr -> expr operator_map .)
    operator_s_combinator reduce using rule 31 (expr -> expr operator_map .)
    operator_goodname2 reduce using rule 31 (expr -> expr operator_map .)
    VAR             reduce using rule 31 (expr -> expr operator_map .)
    NUM             reduce using rule 31 (expr -> expr operator_map .)
    FLOAT           reduce using rule 31 (expr -> expr operator_map .)
    STRING_3SQ      reduce using rule 31 (expr -> expr operator_map .)
    STRING_3DQ      reduce using rule 31 (expr -> expr operator_map .)
    STRING_SQ       reduce using rule 31 (expr -> expr operator_map .)
    STRING_DQ       reduce using rule 31 (expr -> expr operator_map .)
    $end            reduce using rule 31 (expr -> expr operator_map .)
    operator_inner  reduce using rule 31 (expr -> expr operator_map .)


state 45

    (34) expr -> expr operator_less_than . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 86
    const_val                      shift and go to state 9

state 46

    (35) expr -> expr operator_less_than_equals . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 87
    const_val                      shift and go to state 9

state 47

    (36) expr -> expr operator_greater_than . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 88
    const_val                      shift and go to state 9

state 48

    (37) expr -> expr operator_greater_than_equals . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 89
    const_val                      shift and go to state 9

state 49

    (38) expr -> expr operator_equals . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 90
    const_val                      shift and go to state 9

state 50

    (39) expr -> expr operator_not_equals . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 91
    const_val                      shift and go to state 9

state 51

    (40) expr -> expr operator_smallest . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 92
    const_val                      shift and go to state 9

state 52

    (41) expr -> expr operator_greatest . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 93
    const_val                      shift and go to state 9

state 53

    (42) expr -> expr operator_goodname . expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 94
    const_val                      shift and go to state 9

state 54

    (20) expr -> operator_bitnot expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 20 (expr -> operator_bitnot expr .)
    operator_inner  reduce using rule 20 (expr -> operator_bitnot expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_sub    [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_mul    [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_div    [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_trudiv [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_pow    [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_join   [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_split  [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_scan   [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_reduc  [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_bitand [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_bitor  [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_bitxor [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_bitshiftleft [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_bitshiftright [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_and    [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_or     [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_xor    [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_contains [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_incr   [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_decr   [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_outer  [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_rotate [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_apply  [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_compose [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_over   [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_map    [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_less_than [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_less_than_equals [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_greater_than [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_greater_than_equals [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_equals [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_not_equals [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_smallest [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_greatest [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_goodname [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_bitnot [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_not    [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_reverse [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_sorted_incr [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_sorted_decr [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_s_combinator [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! operator_goodname2 [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! VAR             [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! NUM             [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! FLOAT           [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! STRING_3SQ      [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! STRING_3DQ      [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! STRING_SQ       [ reduce using rule 20 (expr -> operator_bitnot expr .) ]
  ! STRING_DQ       [ reduce using rule 20 (expr -> operator_bitnot expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 55

    (21) expr -> operator_not expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 21 (expr -> operator_not expr .)
    operator_inner  reduce using rule 21 (expr -> operator_not expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_sub    [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_mul    [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_div    [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_trudiv [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_pow    [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_join   [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_split  [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_scan   [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_reduc  [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_bitand [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_bitor  [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_bitxor [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_bitshiftleft [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_bitshiftright [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_and    [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_or     [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_xor    [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_contains [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_incr   [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_decr   [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_outer  [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_rotate [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_apply  [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_compose [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_over   [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_map    [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_less_than [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_less_than_equals [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_greater_than [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_greater_than_equals [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_equals [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_not_equals [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_smallest [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_greatest [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_goodname [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_bitnot [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_not    [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_reverse [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_sorted_incr [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_sorted_decr [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_s_combinator [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! operator_goodname2 [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! VAR             [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! NUM             [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! FLOAT           [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! STRING_3SQ      [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! STRING_3DQ      [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! STRING_SQ       [ reduce using rule 21 (expr -> operator_not expr .) ]
  ! STRING_DQ       [ reduce using rule 21 (expr -> operator_not expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 56

    (26) expr -> operator_reverse expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 26 (expr -> operator_reverse expr .)
    operator_inner  reduce using rule 26 (expr -> operator_reverse expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_sub    [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_mul    [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_div    [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_trudiv [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_pow    [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_join   [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_split  [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_scan   [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_reduc  [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_bitand [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_bitor  [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_bitxor [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_bitshiftleft [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_bitshiftright [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_and    [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_or     [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_xor    [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_contains [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_incr   [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_decr   [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_outer  [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_rotate [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_apply  [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_compose [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_over   [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_map    [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_less_than [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_less_than_equals [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_greater_than [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_greater_than_equals [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_equals [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_not_equals [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_smallest [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_greatest [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_goodname [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_bitnot [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_not    [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_reverse [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_sorted_incr [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_sorted_decr [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_s_combinator [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! operator_goodname2 [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! VAR             [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! NUM             [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! FLOAT           [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! STRING_3SQ      [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! STRING_3DQ      [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! STRING_SQ       [ reduce using rule 26 (expr -> operator_reverse expr .) ]
  ! STRING_DQ       [ reduce using rule 26 (expr -> operator_reverse expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 57

    (32) expr -> operator_sorted_incr expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 32 (expr -> operator_sorted_incr expr .)
    operator_inner  reduce using rule 32 (expr -> operator_sorted_incr expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_sub    [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_mul    [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_div    [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_trudiv [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_pow    [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_join   [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_split  [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_scan   [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_reduc  [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_bitand [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_bitor  [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_bitxor [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_bitshiftleft [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_bitshiftright [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_and    [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_or     [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_xor    [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_contains [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_incr   [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_decr   [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_outer  [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_rotate [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_apply  [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_compose [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_over   [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_map    [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_less_than [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_less_than_equals [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_greater_than [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_greater_than_equals [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_equals [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_not_equals [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_smallest [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_greatest [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_goodname [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_bitnot [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_not    [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_reverse [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_sorted_incr [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_sorted_decr [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_s_combinator [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! operator_goodname2 [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! VAR             [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! NUM             [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! FLOAT           [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! STRING_3SQ      [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! STRING_3DQ      [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! STRING_SQ       [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]
  ! STRING_DQ       [ reduce using rule 32 (expr -> operator_sorted_incr expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 58

    (33) expr -> operator_sorted_decr expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 33 (expr -> operator_sorted_decr expr .)
    operator_inner  reduce using rule 33 (expr -> operator_sorted_decr expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_sub    [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_mul    [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_div    [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_trudiv [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_pow    [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_join   [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_split  [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_scan   [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_reduc  [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_bitand [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_bitor  [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_bitxor [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_bitshiftleft [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_bitshiftright [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_and    [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_or     [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_xor    [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_contains [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_incr   [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_decr   [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_outer  [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_rotate [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_apply  [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_compose [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_over   [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_map    [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_less_than [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_less_than_equals [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_greater_than [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_greater_than_equals [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_equals [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_not_equals [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_smallest [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_greatest [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_goodname [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_bitnot [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_not    [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_reverse [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_sorted_incr [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_sorted_decr [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_s_combinator [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! operator_goodname2 [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! VAR             [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! NUM             [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! FLOAT           [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! STRING_3SQ      [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! STRING_3DQ      [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! STRING_SQ       [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]
  ! STRING_DQ       [ reduce using rule 33 (expr -> operator_sorted_decr expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 59

    (43) expr -> operator_s_combinator expr . expr expr
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 95
    const_val                      shift and go to state 9

state 60

    (44) expr -> operator_goodname2 expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 44 (expr -> operator_goodname2 expr .)
    operator_inner  reduce using rule 44 (expr -> operator_goodname2 expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_sub    [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_mul    [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_div    [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_trudiv [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_pow    [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_join   [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_split  [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_scan   [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_reduc  [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_bitand [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_bitor  [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_bitxor [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_bitshiftleft [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_bitshiftright [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_and    [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_or     [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_xor    [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_contains [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_incr   [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_decr   [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_outer  [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_rotate [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_apply  [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_compose [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_over   [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_map    [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_less_than [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_less_than_equals [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_greater_than [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_greater_than_equals [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_equals [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_not_equals [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_smallest [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_greatest [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_goodname [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_bitnot [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_not    [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_reverse [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_sorted_incr [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_sorted_decr [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_s_combinator [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! operator_goodname2 [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! VAR             [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! NUM             [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! FLOAT           [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! STRING_3SQ      [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! STRING_3DQ      [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! STRING_SQ       [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]
  ! STRING_DQ       [ reduce using rule 44 (expr -> operator_goodname2 expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 61

    (25) expr -> expr expr operator_inner . expr expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 96
    const_val                      shift and go to state 9

state 62

    (1) expr -> expr operator_add expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 1 (expr -> expr operator_add expr .)
    operator_inner  reduce using rule 1 (expr -> expr operator_add expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_sub    [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_mul    [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_div    [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_trudiv [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_pow    [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_join   [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_split  [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_scan   [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_reduc  [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_bitand [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_bitor  [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_bitxor [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_bitshiftleft [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_bitshiftright [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_and    [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_or     [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_xor    [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_contains [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_incr   [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_decr   [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_outer  [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_rotate [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_apply  [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_compose [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_over   [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_map    [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_less_than [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_less_than_equals [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_greater_than [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_greater_than_equals [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_equals [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_not_equals [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_smallest [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_greatest [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_goodname [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_bitnot [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_not    [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_reverse [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_sorted_incr [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_sorted_decr [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_s_combinator [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! operator_goodname2 [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! VAR             [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! NUM             [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! FLOAT           [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! STRING_3SQ      [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! STRING_3DQ      [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! STRING_SQ       [ reduce using rule 1 (expr -> expr operator_add expr .) ]
  ! STRING_DQ       [ reduce using rule 1 (expr -> expr operator_add expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 63

    (2) expr -> expr operator_sub expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 2 (expr -> expr operator_sub expr .)
    operator_inner  reduce using rule 2 (expr -> expr operator_sub expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_sub    [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_mul    [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_div    [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_trudiv [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_pow    [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_join   [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_split  [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_scan   [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_reduc  [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_bitand [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_bitor  [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_bitxor [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_bitshiftleft [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_bitshiftright [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_and    [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_or     [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_xor    [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_contains [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_incr   [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_decr   [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_outer  [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_rotate [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_apply  [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_compose [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_over   [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_map    [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_less_than [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_less_than_equals [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_greater_than [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_greater_than_equals [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_equals [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_not_equals [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_smallest [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_greatest [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_goodname [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_bitnot [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_not    [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_reverse [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_sorted_incr [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_sorted_decr [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_s_combinator [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! operator_goodname2 [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! VAR             [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! NUM             [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! FLOAT           [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! STRING_3SQ      [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! STRING_3DQ      [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! STRING_SQ       [ reduce using rule 2 (expr -> expr operator_sub expr .) ]
  ! STRING_DQ       [ reduce using rule 2 (expr -> expr operator_sub expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 64

    (3) expr -> expr operator_mul expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 3 (expr -> expr operator_mul expr .)
    operator_inner  reduce using rule 3 (expr -> expr operator_mul expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_sub    [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_mul    [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_div    [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_trudiv [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_pow    [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_join   [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_split  [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_scan   [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_reduc  [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_bitand [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_bitor  [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_bitxor [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_bitshiftleft [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_bitshiftright [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_and    [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_or     [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_xor    [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_contains [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_incr   [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_decr   [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_outer  [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_rotate [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_apply  [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_compose [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_over   [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_map    [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_less_than [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_less_than_equals [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_greater_than [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_greater_than_equals [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_equals [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_not_equals [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_smallest [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_greatest [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_goodname [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_bitnot [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_not    [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_reverse [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_sorted_incr [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_sorted_decr [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_s_combinator [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! operator_goodname2 [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! VAR             [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! NUM             [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! FLOAT           [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! STRING_3SQ      [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! STRING_3DQ      [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! STRING_SQ       [ reduce using rule 3 (expr -> expr operator_mul expr .) ]
  ! STRING_DQ       [ reduce using rule 3 (expr -> expr operator_mul expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 65

    (4) expr -> expr operator_div expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 4 (expr -> expr operator_div expr .)
    operator_inner  reduce using rule 4 (expr -> expr operator_div expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_sub    [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_mul    [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_div    [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_trudiv [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_pow    [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_join   [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_split  [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_scan   [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_reduc  [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_bitand [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_bitor  [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_bitxor [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_bitshiftleft [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_bitshiftright [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_and    [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_or     [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_xor    [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_contains [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_incr   [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_decr   [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_outer  [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_rotate [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_apply  [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_compose [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_over   [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_map    [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_less_than [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_less_than_equals [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_greater_than [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_greater_than_equals [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_equals [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_not_equals [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_smallest [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_greatest [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_goodname [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_bitnot [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_not    [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_reverse [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_sorted_incr [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_sorted_decr [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_s_combinator [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! operator_goodname2 [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! VAR             [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! NUM             [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! FLOAT           [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! STRING_3SQ      [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! STRING_3DQ      [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! STRING_SQ       [ reduce using rule 4 (expr -> expr operator_div expr .) ]
  ! STRING_DQ       [ reduce using rule 4 (expr -> expr operator_div expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 66

    (5) expr -> expr operator_trudiv expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 5 (expr -> expr operator_trudiv expr .)
    operator_inner  reduce using rule 5 (expr -> expr operator_trudiv expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_sub    [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_mul    [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_div    [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_trudiv [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_pow    [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_join   [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_split  [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_scan   [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_reduc  [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_bitand [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_bitor  [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_bitxor [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_bitshiftleft [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_bitshiftright [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_and    [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_or     [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_xor    [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_contains [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_incr   [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_decr   [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_outer  [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_rotate [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_apply  [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_compose [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_over   [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_map    [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_less_than [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_less_than_equals [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_greater_than [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_greater_than_equals [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_equals [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_not_equals [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_smallest [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_greatest [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_goodname [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_bitnot [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_not    [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_reverse [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_sorted_incr [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_sorted_decr [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_s_combinator [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! operator_goodname2 [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! VAR             [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! NUM             [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! FLOAT           [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! STRING_3SQ      [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! STRING_3DQ      [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! STRING_SQ       [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]
  ! STRING_DQ       [ reduce using rule 5 (expr -> expr operator_trudiv expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 67

    (6) expr -> expr operator_pow expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 6 (expr -> expr operator_pow expr .)
    operator_inner  reduce using rule 6 (expr -> expr operator_pow expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_sub    [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_mul    [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_div    [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_trudiv [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_pow    [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_join   [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_split  [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_scan   [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_reduc  [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_bitand [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_bitor  [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_bitxor [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_bitshiftleft [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_bitshiftright [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_and    [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_or     [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_xor    [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_contains [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_incr   [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_decr   [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_outer  [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_rotate [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_apply  [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_compose [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_over   [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_map    [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_less_than [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_less_than_equals [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_greater_than [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_greater_than_equals [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_equals [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_not_equals [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_smallest [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_greatest [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_goodname [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_bitnot [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_not    [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_reverse [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_sorted_incr [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_sorted_decr [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_s_combinator [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! operator_goodname2 [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! VAR             [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! NUM             [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! FLOAT           [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! STRING_3SQ      [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! STRING_3DQ      [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! STRING_SQ       [ reduce using rule 6 (expr -> expr operator_pow expr .) ]
  ! STRING_DQ       [ reduce using rule 6 (expr -> expr operator_pow expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 68

    (7) expr -> expr operator_join expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 7 (expr -> expr operator_join expr .)
    operator_inner  reduce using rule 7 (expr -> expr operator_join expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_sub    [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_mul    [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_div    [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_trudiv [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_pow    [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_join   [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_split  [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_scan   [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_reduc  [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_bitand [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_bitor  [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_bitxor [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_bitshiftleft [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_bitshiftright [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_and    [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_or     [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_xor    [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_contains [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_incr   [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_decr   [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_outer  [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_rotate [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_apply  [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_compose [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_over   [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_map    [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_less_than [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_less_than_equals [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_greater_than [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_greater_than_equals [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_equals [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_not_equals [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_smallest [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_greatest [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_goodname [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_bitnot [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_not    [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_reverse [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_sorted_incr [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_sorted_decr [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_s_combinator [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! operator_goodname2 [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! VAR             [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! NUM             [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! FLOAT           [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! STRING_3SQ      [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! STRING_3DQ      [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! STRING_SQ       [ reduce using rule 7 (expr -> expr operator_join expr .) ]
  ! STRING_DQ       [ reduce using rule 7 (expr -> expr operator_join expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 69

    (8) expr -> expr operator_split expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 8 (expr -> expr operator_split expr .)
    operator_inner  reduce using rule 8 (expr -> expr operator_split expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_sub    [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_mul    [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_div    [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_trudiv [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_pow    [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_join   [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_split  [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_scan   [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_reduc  [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_bitand [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_bitor  [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_bitxor [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_bitshiftleft [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_bitshiftright [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_and    [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_or     [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_xor    [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_contains [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_incr   [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_decr   [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_outer  [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_rotate [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_apply  [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_compose [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_over   [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_map    [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_less_than [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_less_than_equals [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_greater_than [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_greater_than_equals [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_equals [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_not_equals [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_smallest [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_greatest [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_goodname [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_bitnot [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_not    [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_reverse [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_sorted_incr [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_sorted_decr [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_s_combinator [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! operator_goodname2 [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! VAR             [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! NUM             [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! FLOAT           [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! STRING_3SQ      [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! STRING_3DQ      [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! STRING_SQ       [ reduce using rule 8 (expr -> expr operator_split expr .) ]
  ! STRING_DQ       [ reduce using rule 8 (expr -> expr operator_split expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 70

    (9) expr -> expr operator_scan expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 9 (expr -> expr operator_scan expr .)
    operator_inner  reduce using rule 9 (expr -> expr operator_scan expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_sub    [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_mul    [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_div    [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_trudiv [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_pow    [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_join   [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_split  [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_scan   [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_reduc  [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_bitand [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_bitor  [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_bitxor [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_bitshiftleft [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_bitshiftright [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_and    [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_or     [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_xor    [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_contains [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_incr   [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_decr   [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_outer  [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_rotate [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_apply  [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_compose [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_over   [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_map    [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_less_than [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_less_than_equals [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_greater_than [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_greater_than_equals [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_equals [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_not_equals [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_smallest [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_greatest [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_goodname [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_bitnot [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_not    [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_reverse [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_sorted_incr [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_sorted_decr [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_s_combinator [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! operator_goodname2 [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! VAR             [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! NUM             [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! FLOAT           [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! STRING_3SQ      [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! STRING_3DQ      [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! STRING_SQ       [ reduce using rule 9 (expr -> expr operator_scan expr .) ]
  ! STRING_DQ       [ reduce using rule 9 (expr -> expr operator_scan expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 71

    (10) expr -> expr operator_reduc expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 10 (expr -> expr operator_reduc expr .)
    operator_inner  reduce using rule 10 (expr -> expr operator_reduc expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_sub    [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_mul    [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_div    [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_trudiv [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_pow    [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_join   [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_split  [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_scan   [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_reduc  [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_bitand [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_bitor  [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_bitxor [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_bitshiftleft [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_bitshiftright [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_and    [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_or     [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_xor    [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_contains [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_incr   [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_decr   [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_outer  [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_rotate [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_apply  [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_compose [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_over   [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_map    [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_less_than [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_less_than_equals [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_greater_than [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_greater_than_equals [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_equals [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_not_equals [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_smallest [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_greatest [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_goodname [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_bitnot [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_not    [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_reverse [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_sorted_incr [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_sorted_decr [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_s_combinator [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! operator_goodname2 [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! VAR             [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! NUM             [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! FLOAT           [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! STRING_3SQ      [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! STRING_3DQ      [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! STRING_SQ       [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]
  ! STRING_DQ       [ reduce using rule 10 (expr -> expr operator_reduc expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 72

    (11) expr -> expr operator_bitand expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 11 (expr -> expr operator_bitand expr .)
    operator_inner  reduce using rule 11 (expr -> expr operator_bitand expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_sub    [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_mul    [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_div    [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_trudiv [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_pow    [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_join   [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_split  [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_scan   [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_reduc  [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_bitand [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_bitor  [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_bitxor [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_bitshiftleft [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_bitshiftright [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_and    [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_or     [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_xor    [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_contains [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_incr   [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_decr   [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_outer  [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_rotate [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_apply  [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_compose [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_over   [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_map    [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_less_than [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_less_than_equals [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_greater_than [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_greater_than_equals [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_equals [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_not_equals [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_smallest [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_greatest [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_goodname [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_bitnot [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_not    [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_reverse [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_sorted_incr [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_sorted_decr [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_s_combinator [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! operator_goodname2 [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! VAR             [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! NUM             [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! FLOAT           [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! STRING_3SQ      [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! STRING_3DQ      [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! STRING_SQ       [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]
  ! STRING_DQ       [ reduce using rule 11 (expr -> expr operator_bitand expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 73

    (12) expr -> expr operator_bitor expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 12 (expr -> expr operator_bitor expr .)
    operator_inner  reduce using rule 12 (expr -> expr operator_bitor expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_sub    [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_mul    [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_div    [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_trudiv [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_pow    [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_join   [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_split  [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_scan   [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_reduc  [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_bitand [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_bitor  [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_bitxor [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_bitshiftleft [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_bitshiftright [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_and    [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_or     [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_xor    [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_contains [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_incr   [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_decr   [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_outer  [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_rotate [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_apply  [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_compose [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_over   [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_map    [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_less_than [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_less_than_equals [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_greater_than [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_greater_than_equals [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_equals [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_not_equals [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_smallest [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_greatest [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_goodname [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_bitnot [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_not    [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_reverse [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_sorted_incr [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_sorted_decr [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_s_combinator [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! operator_goodname2 [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! VAR             [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! NUM             [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! FLOAT           [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! STRING_3SQ      [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! STRING_3DQ      [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! STRING_SQ       [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]
  ! STRING_DQ       [ reduce using rule 12 (expr -> expr operator_bitor expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 74

    (13) expr -> expr operator_bitxor expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 13 (expr -> expr operator_bitxor expr .)
    operator_inner  reduce using rule 13 (expr -> expr operator_bitxor expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_sub    [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_mul    [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_div    [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_trudiv [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_pow    [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_join   [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_split  [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_scan   [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_reduc  [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_bitand [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_bitor  [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_bitxor [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_bitshiftleft [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_bitshiftright [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_and    [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_or     [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_xor    [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_contains [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_incr   [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_decr   [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_outer  [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_rotate [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_apply  [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_compose [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_over   [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_map    [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_less_than [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_less_than_equals [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_greater_than [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_greater_than_equals [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_equals [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_not_equals [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_smallest [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_greatest [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_goodname [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_bitnot [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_not    [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_reverse [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_sorted_incr [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_sorted_decr [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_s_combinator [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! operator_goodname2 [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! VAR             [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! NUM             [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! FLOAT           [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! STRING_3SQ      [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! STRING_3DQ      [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! STRING_SQ       [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]
  ! STRING_DQ       [ reduce using rule 13 (expr -> expr operator_bitxor expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 75

    (14) expr -> expr operator_bitshiftleft expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 14 (expr -> expr operator_bitshiftleft expr .)
    operator_inner  reduce using rule 14 (expr -> expr operator_bitshiftleft expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_sub    [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_mul    [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_div    [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_trudiv [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_pow    [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_join   [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_split  [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_scan   [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_reduc  [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_bitand [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_bitor  [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_bitxor [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_bitshiftleft [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_bitshiftright [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_and    [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_or     [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_xor    [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_contains [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_incr   [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_decr   [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_outer  [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_rotate [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_apply  [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_compose [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_over   [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_map    [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_less_than [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_less_than_equals [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_greater_than [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_greater_than_equals [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_equals [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_not_equals [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_smallest [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_greatest [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_goodname [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_bitnot [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_not    [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_reverse [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_sorted_incr [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_sorted_decr [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_s_combinator [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! operator_goodname2 [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! VAR             [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! NUM             [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! FLOAT           [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! STRING_3SQ      [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! STRING_3DQ      [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! STRING_SQ       [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]
  ! STRING_DQ       [ reduce using rule 14 (expr -> expr operator_bitshiftleft expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 76

    (15) expr -> expr operator_bitshiftright expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 15 (expr -> expr operator_bitshiftright expr .)
    operator_inner  reduce using rule 15 (expr -> expr operator_bitshiftright expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_sub    [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_mul    [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_div    [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_trudiv [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_pow    [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_join   [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_split  [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_scan   [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_reduc  [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_bitand [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_bitor  [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_bitxor [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_bitshiftleft [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_bitshiftright [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_and    [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_or     [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_xor    [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_contains [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_incr   [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_decr   [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_outer  [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_rotate [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_apply  [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_compose [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_over   [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_map    [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_less_than [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_less_than_equals [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_greater_than [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_greater_than_equals [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_equals [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_not_equals [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_smallest [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_greatest [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_goodname [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_bitnot [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_not    [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_reverse [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_sorted_incr [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_sorted_decr [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_s_combinator [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! operator_goodname2 [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! VAR             [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! NUM             [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! FLOAT           [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! STRING_3SQ      [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! STRING_3DQ      [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! STRING_SQ       [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]
  ! STRING_DQ       [ reduce using rule 15 (expr -> expr operator_bitshiftright expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 77

    (16) expr -> expr operator_and expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 16 (expr -> expr operator_and expr .)
    operator_inner  reduce using rule 16 (expr -> expr operator_and expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_sub    [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_mul    [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_div    [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_trudiv [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_pow    [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_join   [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_split  [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_scan   [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_reduc  [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_bitand [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_bitor  [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_bitxor [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_bitshiftleft [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_bitshiftright [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_and    [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_or     [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_xor    [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_contains [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_incr   [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_decr   [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_outer  [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_rotate [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_apply  [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_compose [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_over   [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_map    [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_less_than [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_less_than_equals [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_greater_than [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_greater_than_equals [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_equals [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_not_equals [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_smallest [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_greatest [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_goodname [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_bitnot [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_not    [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_reverse [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_sorted_incr [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_sorted_decr [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_s_combinator [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! operator_goodname2 [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! VAR             [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! NUM             [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! FLOAT           [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! STRING_3SQ      [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! STRING_3DQ      [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! STRING_SQ       [ reduce using rule 16 (expr -> expr operator_and expr .) ]
  ! STRING_DQ       [ reduce using rule 16 (expr -> expr operator_and expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 78

    (17) expr -> expr operator_or expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 17 (expr -> expr operator_or expr .)
    operator_inner  reduce using rule 17 (expr -> expr operator_or expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_sub    [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_mul    [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_div    [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_trudiv [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_pow    [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_join   [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_split  [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_scan   [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_reduc  [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_bitand [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_bitor  [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_bitxor [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_bitshiftleft [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_bitshiftright [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_and    [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_or     [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_xor    [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_contains [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_incr   [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_decr   [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_outer  [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_rotate [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_apply  [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_compose [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_over   [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_map    [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_less_than [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_less_than_equals [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_greater_than [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_greater_than_equals [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_equals [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_not_equals [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_smallest [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_greatest [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_goodname [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_bitnot [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_not    [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_reverse [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_sorted_incr [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_sorted_decr [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_s_combinator [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! operator_goodname2 [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! VAR             [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! NUM             [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! FLOAT           [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! STRING_3SQ      [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! STRING_3DQ      [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! STRING_SQ       [ reduce using rule 17 (expr -> expr operator_or expr .) ]
  ! STRING_DQ       [ reduce using rule 17 (expr -> expr operator_or expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 79

    (18) expr -> expr operator_xor expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 18 (expr -> expr operator_xor expr .)
    operator_inner  reduce using rule 18 (expr -> expr operator_xor expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_sub    [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_mul    [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_div    [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_trudiv [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_pow    [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_join   [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_split  [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_scan   [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_reduc  [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_bitand [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_bitor  [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_bitxor [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_bitshiftleft [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_bitshiftright [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_and    [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_or     [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_xor    [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_contains [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_incr   [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_decr   [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_outer  [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_rotate [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_apply  [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_compose [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_over   [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_map    [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_less_than [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_less_than_equals [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_greater_than [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_greater_than_equals [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_equals [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_not_equals [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_smallest [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_greatest [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_goodname [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_bitnot [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_not    [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_reverse [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_sorted_incr [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_sorted_decr [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_s_combinator [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! operator_goodname2 [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! VAR             [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! NUM             [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! FLOAT           [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! STRING_3SQ      [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! STRING_3DQ      [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! STRING_SQ       [ reduce using rule 18 (expr -> expr operator_xor expr .) ]
  ! STRING_DQ       [ reduce using rule 18 (expr -> expr operator_xor expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 80

    (19) expr -> expr operator_contains expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 19 (expr -> expr operator_contains expr .)
    operator_inner  reduce using rule 19 (expr -> expr operator_contains expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_sub    [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_mul    [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_div    [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_trudiv [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_pow    [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_join   [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_split  [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_scan   [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_reduc  [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_bitand [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_bitor  [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_bitxor [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_bitshiftleft [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_bitshiftright [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_and    [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_or     [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_xor    [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_contains [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_incr   [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_decr   [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_outer  [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_rotate [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_apply  [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_compose [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_over   [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_map    [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_less_than [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_less_than_equals [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_greater_than [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_greater_than_equals [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_equals [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_not_equals [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_smallest [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_greatest [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_goodname [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_bitnot [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_not    [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_reverse [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_sorted_incr [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_sorted_decr [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_s_combinator [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! operator_goodname2 [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! VAR             [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! NUM             [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! FLOAT           [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! STRING_3SQ      [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! STRING_3DQ      [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! STRING_SQ       [ reduce using rule 19 (expr -> expr operator_contains expr .) ]
  ! STRING_DQ       [ reduce using rule 19 (expr -> expr operator_contains expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 81

    (24) expr -> expr operator_outer expr . expr
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 97
    const_val                      shift and go to state 9

state 82

    (27) expr -> expr operator_rotate expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 27 (expr -> expr operator_rotate expr .)
    operator_inner  reduce using rule 27 (expr -> expr operator_rotate expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_sub    [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_mul    [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_div    [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_trudiv [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_pow    [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_join   [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_split  [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_scan   [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_reduc  [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_bitand [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_bitor  [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_bitxor [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_bitshiftleft [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_bitshiftright [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_and    [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_or     [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_xor    [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_contains [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_incr   [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_decr   [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_outer  [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_rotate [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_apply  [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_compose [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_over   [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_map    [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_less_than [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_less_than_equals [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_greater_than [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_greater_than_equals [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_equals [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_not_equals [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_smallest [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_greatest [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_goodname [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_bitnot [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_not    [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_reverse [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_sorted_incr [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_sorted_decr [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_s_combinator [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! operator_goodname2 [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! VAR             [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! NUM             [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! FLOAT           [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! STRING_3SQ      [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! STRING_3DQ      [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! STRING_SQ       [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]
  ! STRING_DQ       [ reduce using rule 27 (expr -> expr operator_rotate expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 83

    (28) expr -> expr operator_apply expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 28 (expr -> expr operator_apply expr .)
    operator_inner  reduce using rule 28 (expr -> expr operator_apply expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_sub    [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_mul    [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_div    [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_trudiv [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_pow    [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_join   [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_split  [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_scan   [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_reduc  [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_bitand [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_bitor  [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_bitxor [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_bitshiftleft [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_bitshiftright [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_and    [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_or     [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_xor    [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_contains [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_incr   [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_decr   [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_outer  [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_rotate [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_apply  [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_compose [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_over   [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_map    [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_less_than [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_less_than_equals [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_greater_than [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_greater_than_equals [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_equals [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_not_equals [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_smallest [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_greatest [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_goodname [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_bitnot [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_not    [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_reverse [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_sorted_incr [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_sorted_decr [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_s_combinator [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! operator_goodname2 [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! VAR             [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! NUM             [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! FLOAT           [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! STRING_3SQ      [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! STRING_3DQ      [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! STRING_SQ       [ reduce using rule 28 (expr -> expr operator_apply expr .) ]
  ! STRING_DQ       [ reduce using rule 28 (expr -> expr operator_apply expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 84

    (29) expr -> expr operator_compose expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 29 (expr -> expr operator_compose expr .)
    operator_inner  reduce using rule 29 (expr -> expr operator_compose expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_sub    [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_mul    [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_div    [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_trudiv [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_pow    [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_join   [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_split  [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_scan   [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_reduc  [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_bitand [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_bitor  [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_bitxor [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_bitshiftleft [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_bitshiftright [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_and    [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_or     [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_xor    [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_contains [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_incr   [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_decr   [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_outer  [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_rotate [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_apply  [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_compose [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_over   [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_map    [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_less_than [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_less_than_equals [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_greater_than [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_greater_than_equals [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_equals [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_not_equals [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_smallest [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_greatest [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_goodname [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_bitnot [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_not    [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_reverse [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_sorted_incr [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_sorted_decr [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_s_combinator [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! operator_goodname2 [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! VAR             [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! NUM             [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! FLOAT           [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! STRING_3SQ      [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! STRING_3DQ      [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! STRING_SQ       [ reduce using rule 29 (expr -> expr operator_compose expr .) ]
  ! STRING_DQ       [ reduce using rule 29 (expr -> expr operator_compose expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 85

    (30) expr -> expr operator_over expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 30 (expr -> expr operator_over expr .)
    operator_inner  reduce using rule 30 (expr -> expr operator_over expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_sub    [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_mul    [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_div    [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_trudiv [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_pow    [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_join   [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_split  [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_scan   [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_reduc  [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_bitand [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_bitor  [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_bitxor [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_bitshiftleft [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_bitshiftright [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_and    [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_or     [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_xor    [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_contains [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_incr   [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_decr   [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_outer  [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_rotate [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_apply  [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_compose [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_over   [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_map    [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_less_than [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_less_than_equals [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_greater_than [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_greater_than_equals [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_equals [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_not_equals [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_smallest [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_greatest [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_goodname [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_bitnot [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_not    [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_reverse [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_sorted_incr [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_sorted_decr [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_s_combinator [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! operator_goodname2 [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! VAR             [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! NUM             [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! FLOAT           [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! STRING_3SQ      [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! STRING_3DQ      [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! STRING_SQ       [ reduce using rule 30 (expr -> expr operator_over expr .) ]
  ! STRING_DQ       [ reduce using rule 30 (expr -> expr operator_over expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 86

    (34) expr -> expr operator_less_than expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 34 (expr -> expr operator_less_than expr .)
    operator_inner  reduce using rule 34 (expr -> expr operator_less_than expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_sub    [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_mul    [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_div    [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_trudiv [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_pow    [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_join   [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_split  [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_scan   [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_reduc  [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_bitand [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_bitor  [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_bitxor [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_bitshiftleft [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_bitshiftright [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_and    [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_or     [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_xor    [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_contains [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_incr   [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_decr   [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_outer  [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_rotate [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_apply  [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_compose [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_over   [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_map    [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_less_than [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_less_than_equals [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_greater_than [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_greater_than_equals [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_equals [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_not_equals [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_smallest [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_greatest [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_goodname [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_bitnot [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_not    [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_reverse [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_sorted_incr [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_sorted_decr [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_s_combinator [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! operator_goodname2 [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! VAR             [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! NUM             [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! FLOAT           [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! STRING_3SQ      [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! STRING_3DQ      [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! STRING_SQ       [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]
  ! STRING_DQ       [ reduce using rule 34 (expr -> expr operator_less_than expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 87

    (35) expr -> expr operator_less_than_equals expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 35 (expr -> expr operator_less_than_equals expr .)
    operator_inner  reduce using rule 35 (expr -> expr operator_less_than_equals expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_sub    [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_mul    [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_div    [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_trudiv [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_pow    [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_join   [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_split  [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_scan   [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_reduc  [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_bitand [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_bitor  [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_bitxor [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_bitshiftleft [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_bitshiftright [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_and    [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_or     [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_xor    [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_contains [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_incr   [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_decr   [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_outer  [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_rotate [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_apply  [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_compose [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_over   [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_map    [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_less_than [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_less_than_equals [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_greater_than [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_greater_than_equals [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_equals [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_not_equals [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_smallest [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_greatest [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_goodname [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_bitnot [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_not    [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_reverse [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_sorted_incr [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_sorted_decr [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_s_combinator [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! operator_goodname2 [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! VAR             [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! NUM             [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! FLOAT           [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! STRING_3SQ      [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! STRING_3DQ      [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! STRING_SQ       [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]
  ! STRING_DQ       [ reduce using rule 35 (expr -> expr operator_less_than_equals expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 88

    (36) expr -> expr operator_greater_than expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 36 (expr -> expr operator_greater_than expr .)
    operator_inner  reduce using rule 36 (expr -> expr operator_greater_than expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_sub    [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_mul    [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_div    [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_trudiv [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_pow    [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_join   [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_split  [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_scan   [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_reduc  [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_bitand [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_bitor  [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_bitxor [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_bitshiftleft [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_bitshiftright [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_and    [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_or     [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_xor    [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_contains [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_incr   [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_decr   [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_outer  [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_rotate [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_apply  [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_compose [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_over   [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_map    [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_less_than [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_less_than_equals [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_greater_than [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_greater_than_equals [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_equals [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_not_equals [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_smallest [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_greatest [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_goodname [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_bitnot [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_not    [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_reverse [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_sorted_incr [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_sorted_decr [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_s_combinator [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! operator_goodname2 [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! VAR             [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! NUM             [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! FLOAT           [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! STRING_3SQ      [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! STRING_3DQ      [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! STRING_SQ       [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]
  ! STRING_DQ       [ reduce using rule 36 (expr -> expr operator_greater_than expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 89

    (37) expr -> expr operator_greater_than_equals expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 37 (expr -> expr operator_greater_than_equals expr .)
    operator_inner  reduce using rule 37 (expr -> expr operator_greater_than_equals expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_sub    [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_mul    [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_div    [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_trudiv [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_pow    [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_join   [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_split  [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_scan   [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_reduc  [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_bitand [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_bitor  [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_bitxor [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_bitshiftleft [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_bitshiftright [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_and    [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_or     [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_xor    [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_contains [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_incr   [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_decr   [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_outer  [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_rotate [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_apply  [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_compose [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_over   [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_map    [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_less_than [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_less_than_equals [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_greater_than [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_greater_than_equals [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_equals [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_not_equals [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_smallest [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_greatest [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_goodname [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_bitnot [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_not    [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_reverse [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_sorted_incr [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_sorted_decr [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_s_combinator [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! operator_goodname2 [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! VAR             [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! NUM             [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! FLOAT           [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! STRING_3SQ      [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! STRING_3DQ      [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! STRING_SQ       [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]
  ! STRING_DQ       [ reduce using rule 37 (expr -> expr operator_greater_than_equals expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 90

    (38) expr -> expr operator_equals expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 38 (expr -> expr operator_equals expr .)
    operator_inner  reduce using rule 38 (expr -> expr operator_equals expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_sub    [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_mul    [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_div    [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_trudiv [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_pow    [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_join   [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_split  [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_scan   [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_reduc  [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_bitand [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_bitor  [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_bitxor [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_bitshiftleft [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_bitshiftright [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_and    [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_or     [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_xor    [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_contains [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_incr   [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_decr   [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_outer  [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_rotate [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_apply  [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_compose [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_over   [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_map    [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_less_than [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_less_than_equals [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_greater_than [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_greater_than_equals [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_equals [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_not_equals [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_smallest [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_greatest [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_goodname [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_bitnot [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_not    [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_reverse [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_sorted_incr [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_sorted_decr [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_s_combinator [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! operator_goodname2 [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! VAR             [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! NUM             [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! FLOAT           [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! STRING_3SQ      [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! STRING_3DQ      [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! STRING_SQ       [ reduce using rule 38 (expr -> expr operator_equals expr .) ]
  ! STRING_DQ       [ reduce using rule 38 (expr -> expr operator_equals expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 91

    (39) expr -> expr operator_not_equals expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 39 (expr -> expr operator_not_equals expr .)
    operator_inner  reduce using rule 39 (expr -> expr operator_not_equals expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_sub    [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_mul    [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_div    [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_trudiv [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_pow    [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_join   [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_split  [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_scan   [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_reduc  [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_bitand [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_bitor  [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_bitxor [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_bitshiftleft [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_bitshiftright [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_and    [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_or     [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_xor    [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_contains [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_incr   [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_decr   [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_outer  [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_rotate [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_apply  [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_compose [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_over   [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_map    [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_less_than [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_less_than_equals [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_greater_than [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_greater_than_equals [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_equals [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_not_equals [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_smallest [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_greatest [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_goodname [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_bitnot [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_not    [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_reverse [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_sorted_incr [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_sorted_decr [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_s_combinator [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! operator_goodname2 [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! VAR             [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! NUM             [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! FLOAT           [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! STRING_3SQ      [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! STRING_3DQ      [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! STRING_SQ       [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]
  ! STRING_DQ       [ reduce using rule 39 (expr -> expr operator_not_equals expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 92

    (40) expr -> expr operator_smallest expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 40 (expr -> expr operator_smallest expr .)
    operator_inner  reduce using rule 40 (expr -> expr operator_smallest expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_sub    [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_mul    [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_div    [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_trudiv [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_pow    [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_join   [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_split  [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_scan   [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_reduc  [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_bitand [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_bitor  [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_bitxor [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_bitshiftleft [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_bitshiftright [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_and    [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_or     [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_xor    [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_contains [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_incr   [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_decr   [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_outer  [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_rotate [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_apply  [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_compose [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_over   [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_map    [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_less_than [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_less_than_equals [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_greater_than [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_greater_than_equals [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_equals [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_not_equals [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_smallest [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_greatest [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_goodname [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_bitnot [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_not    [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_reverse [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_sorted_incr [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_sorted_decr [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_s_combinator [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! operator_goodname2 [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! VAR             [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! NUM             [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! FLOAT           [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! STRING_3SQ      [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! STRING_3DQ      [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! STRING_SQ       [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]
  ! STRING_DQ       [ reduce using rule 40 (expr -> expr operator_smallest expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 93

    (41) expr -> expr operator_greatest expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 41 (expr -> expr operator_greatest expr .)
    operator_inner  reduce using rule 41 (expr -> expr operator_greatest expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_sub    [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_mul    [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_div    [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_trudiv [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_pow    [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_join   [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_split  [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_scan   [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_reduc  [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_bitand [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_bitor  [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_bitxor [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_bitshiftleft [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_bitshiftright [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_and    [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_or     [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_xor    [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_contains [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_incr   [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_decr   [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_outer  [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_rotate [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_apply  [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_compose [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_over   [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_map    [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_less_than [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_less_than_equals [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_greater_than [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_greater_than_equals [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_equals [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_not_equals [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_smallest [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_greatest [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_goodname [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_bitnot [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_not    [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_reverse [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_sorted_incr [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_sorted_decr [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_s_combinator [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! operator_goodname2 [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! VAR             [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! NUM             [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! FLOAT           [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! STRING_3SQ      [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! STRING_3DQ      [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! STRING_SQ       [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]
  ! STRING_DQ       [ reduce using rule 41 (expr -> expr operator_greatest expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 94

    (42) expr -> expr operator_goodname expr .
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 42 (expr -> expr operator_goodname expr .)
    operator_inner  reduce using rule 42 (expr -> expr operator_goodname expr .)
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_sub    [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_mul    [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_div    [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_trudiv [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_pow    [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_join   [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_split  [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_scan   [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_reduc  [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_bitand [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_bitor  [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_bitxor [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_bitshiftleft [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_bitshiftright [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_and    [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_or     [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_xor    [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_contains [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_incr   [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_decr   [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_outer  [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_rotate [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_apply  [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_compose [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_over   [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_map    [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_less_than [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_less_than_equals [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_greater_than [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_greater_than_equals [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_equals [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_not_equals [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_smallest [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_greatest [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_goodname [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_bitnot [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_not    [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_reverse [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_sorted_incr [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_sorted_decr [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_s_combinator [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! operator_goodname2 [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! VAR             [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! NUM             [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! FLOAT           [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! STRING_3SQ      [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! STRING_3DQ      [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! STRING_SQ       [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]
  ! STRING_DQ       [ reduce using rule 42 (expr -> expr operator_goodname expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 95

    (43) expr -> operator_s_combinator expr expr . expr
    (25) expr -> expr expr . operator_inner expr expr
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_inner  shift and go to state 61
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 98
    const_val                      shift and go to state 9

state 96

    (25) expr -> expr expr operator_inner expr . expr
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

    expr                           shift and go to state 99
    const_val                      shift and go to state 9

state 97

    (24) expr -> expr operator_outer expr expr .
    (25) expr -> expr expr . operator_inner expr expr
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_inner resolved as shift
  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 24 (expr -> expr operator_outer expr expr .)
    operator_inner  shift and go to state 61
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_sub    [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_mul    [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_div    [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_trudiv [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_pow    [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_join   [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_split  [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_scan   [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_reduc  [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_bitand [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_bitor  [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_bitxor [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_bitshiftleft [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_bitshiftright [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_and    [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_or     [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_xor    [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_contains [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_incr   [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_decr   [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_outer  [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_rotate [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_apply  [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_compose [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_over   [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_map    [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_less_than [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_less_than_equals [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_greater_than [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_greater_than_equals [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_equals [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_not_equals [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_smallest [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_greatest [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_goodname [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_bitnot [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_not    [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_reverse [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_sorted_incr [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_sorted_decr [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_s_combinator [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_goodname2 [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! VAR             [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! NUM             [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! FLOAT           [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! STRING_3SQ      [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! STRING_3DQ      [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! STRING_SQ       [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! STRING_DQ       [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]
  ! operator_inner  [ reduce using rule 24 (expr -> expr operator_outer expr expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 98

    (43) expr -> operator_s_combinator expr expr expr .
    (25) expr -> expr expr . operator_inner expr expr
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_inner resolved as shift
  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 43 (expr -> operator_s_combinator expr expr expr .)
    operator_inner  shift and go to state 61
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_sub    [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_mul    [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_div    [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_trudiv [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_pow    [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_join   [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_split  [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_scan   [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_reduc  [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_bitand [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_bitor  [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_bitxor [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_bitshiftleft [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_bitshiftright [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_and    [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_or     [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_xor    [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_contains [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_incr   [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_decr   [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_outer  [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_rotate [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_apply  [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_compose [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_over   [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_map    [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_less_than [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_less_than_equals [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_greater_than [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_greater_than_equals [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_equals [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_not_equals [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_smallest [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_greatest [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_goodname [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_bitnot [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_not    [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_reverse [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_sorted_incr [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_sorted_decr [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_s_combinator [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_goodname2 [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! VAR             [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! NUM             [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! FLOAT           [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! STRING_3SQ      [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! STRING_3DQ      [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! STRING_SQ       [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! STRING_DQ       [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]
  ! operator_inner  [ reduce using rule 43 (expr -> operator_s_combinator expr expr expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9

state 99

    (25) expr -> expr expr operator_inner expr expr .
    (25) expr -> expr expr . operator_inner expr expr
    (1) expr -> expr . operator_add expr
    (2) expr -> expr . operator_sub expr
    (3) expr -> expr . operator_mul expr
    (4) expr -> expr . operator_div expr
    (5) expr -> expr . operator_trudiv expr
    (6) expr -> expr . operator_pow expr
    (7) expr -> expr . operator_join expr
    (8) expr -> expr . operator_split expr
    (9) expr -> expr . operator_scan expr
    (10) expr -> expr . operator_reduc expr
    (11) expr -> expr . operator_bitand expr
    (12) expr -> expr . operator_bitor expr
    (13) expr -> expr . operator_bitxor expr
    (14) expr -> expr . operator_bitshiftleft expr
    (15) expr -> expr . operator_bitshiftright expr
    (16) expr -> expr . operator_and expr
    (17) expr -> expr . operator_or expr
    (18) expr -> expr . operator_xor expr
    (19) expr -> expr . operator_contains expr
    (22) expr -> expr . operator_incr
    (23) expr -> expr . operator_decr
    (24) expr -> expr . operator_outer expr expr
    (25) expr -> expr . expr operator_inner expr expr
    (27) expr -> expr . operator_rotate expr
    (28) expr -> expr . operator_apply expr
    (29) expr -> expr . operator_compose expr
    (30) expr -> expr . operator_over expr
    (31) expr -> expr . operator_map
    (34) expr -> expr . operator_less_than expr
    (35) expr -> expr . operator_less_than_equals expr
    (36) expr -> expr . operator_greater_than expr
    (37) expr -> expr . operator_greater_than_equals expr
    (38) expr -> expr . operator_equals expr
    (39) expr -> expr . operator_not_equals expr
    (40) expr -> expr . operator_smallest expr
    (41) expr -> expr . operator_greatest expr
    (42) expr -> expr . operator_goodname expr
    (1) expr -> . expr operator_add expr
    (2) expr -> . expr operator_sub expr
    (3) expr -> . expr operator_mul expr
    (4) expr -> . expr operator_div expr
    (5) expr -> . expr operator_trudiv expr
    (6) expr -> . expr operator_pow expr
    (7) expr -> . expr operator_join expr
    (8) expr -> . expr operator_split expr
    (9) expr -> . expr operator_scan expr
    (10) expr -> . expr operator_reduc expr
    (11) expr -> . expr operator_bitand expr
    (12) expr -> . expr operator_bitor expr
    (13) expr -> . expr operator_bitxor expr
    (14) expr -> . expr operator_bitshiftleft expr
    (15) expr -> . expr operator_bitshiftright expr
    (16) expr -> . expr operator_and expr
    (17) expr -> . expr operator_or expr
    (18) expr -> . expr operator_xor expr
    (19) expr -> . expr operator_contains expr
    (20) expr -> . operator_bitnot expr
    (21) expr -> . operator_not expr
    (22) expr -> . expr operator_incr
    (23) expr -> . expr operator_decr
    (24) expr -> . expr operator_outer expr expr
    (25) expr -> . expr expr operator_inner expr expr
    (26) expr -> . operator_reverse expr
    (27) expr -> . expr operator_rotate expr
    (28) expr -> . expr operator_apply expr
    (29) expr -> . expr operator_compose expr
    (30) expr -> . expr operator_over expr
    (31) expr -> . expr operator_map
    (32) expr -> . operator_sorted_incr expr
    (33) expr -> . operator_sorted_decr expr
    (34) expr -> . expr operator_less_than expr
    (35) expr -> . expr operator_less_than_equals expr
    (36) expr -> . expr operator_greater_than expr
    (37) expr -> . expr operator_greater_than_equals expr
    (38) expr -> . expr operator_equals expr
    (39) expr -> . expr operator_not_equals expr
    (40) expr -> . expr operator_smallest expr
    (41) expr -> . expr operator_greatest expr
    (42) expr -> . expr operator_goodname expr
    (43) expr -> . operator_s_combinator expr expr expr
    (44) expr -> . operator_goodname2 expr
    (45) expr -> . const_val
    (46) expr -> . VAR
    (49) const_val -> . NUM
    (50) const_val -> . FLOAT
    (51) const_val -> . STRING_3SQ
    (52) const_val -> . STRING_3DQ
    (53) const_val -> . STRING_SQ
    (54) const_val -> . STRING_DQ

  ! shift/reduce conflict for operator_inner resolved as shift
  ! shift/reduce conflict for operator_add resolved as shift
  ! shift/reduce conflict for operator_sub resolved as shift
  ! shift/reduce conflict for operator_mul resolved as shift
  ! shift/reduce conflict for operator_div resolved as shift
  ! shift/reduce conflict for operator_trudiv resolved as shift
  ! shift/reduce conflict for operator_pow resolved as shift
  ! shift/reduce conflict for operator_join resolved as shift
  ! shift/reduce conflict for operator_split resolved as shift
  ! shift/reduce conflict for operator_scan resolved as shift
  ! shift/reduce conflict for operator_reduc resolved as shift
  ! shift/reduce conflict for operator_bitand resolved as shift
  ! shift/reduce conflict for operator_bitor resolved as shift
  ! shift/reduce conflict for operator_bitxor resolved as shift
  ! shift/reduce conflict for operator_bitshiftleft resolved as shift
  ! shift/reduce conflict for operator_bitshiftright resolved as shift
  ! shift/reduce conflict for operator_and resolved as shift
  ! shift/reduce conflict for operator_or resolved as shift
  ! shift/reduce conflict for operator_xor resolved as shift
  ! shift/reduce conflict for operator_contains resolved as shift
  ! shift/reduce conflict for operator_incr resolved as shift
  ! shift/reduce conflict for operator_decr resolved as shift
  ! shift/reduce conflict for operator_outer resolved as shift
  ! shift/reduce conflict for operator_rotate resolved as shift
  ! shift/reduce conflict for operator_apply resolved as shift
  ! shift/reduce conflict for operator_compose resolved as shift
  ! shift/reduce conflict for operator_over resolved as shift
  ! shift/reduce conflict for operator_map resolved as shift
  ! shift/reduce conflict for operator_less_than resolved as shift
  ! shift/reduce conflict for operator_less_than_equals resolved as shift
  ! shift/reduce conflict for operator_greater_than resolved as shift
  ! shift/reduce conflict for operator_greater_than_equals resolved as shift
  ! shift/reduce conflict for operator_equals resolved as shift
  ! shift/reduce conflict for operator_not_equals resolved as shift
  ! shift/reduce conflict for operator_smallest resolved as shift
  ! shift/reduce conflict for operator_greatest resolved as shift
  ! shift/reduce conflict for operator_goodname resolved as shift
  ! shift/reduce conflict for operator_bitnot resolved as shift
  ! shift/reduce conflict for operator_not resolved as shift
  ! shift/reduce conflict for operator_reverse resolved as shift
  ! shift/reduce conflict for operator_sorted_incr resolved as shift
  ! shift/reduce conflict for operator_sorted_decr resolved as shift
  ! shift/reduce conflict for operator_s_combinator resolved as shift
  ! shift/reduce conflict for operator_goodname2 resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING_3SQ resolved as shift
  ! shift/reduce conflict for STRING_3DQ resolved as shift
  ! shift/reduce conflict for STRING_SQ resolved as shift
  ! shift/reduce conflict for STRING_DQ resolved as shift
    $end            reduce using rule 25 (expr -> expr expr operator_inner expr expr .)
    operator_inner  shift and go to state 61
    operator_add    shift and go to state 18
    operator_sub    shift and go to state 19
    operator_mul    shift and go to state 20
    operator_div    shift and go to state 21
    operator_trudiv shift and go to state 22
    operator_pow    shift and go to state 23
    operator_join   shift and go to state 24
    operator_split  shift and go to state 25
    operator_scan   shift and go to state 26
    operator_reduc  shift and go to state 27
    operator_bitand shift and go to state 28
    operator_bitor  shift and go to state 29
    operator_bitxor shift and go to state 30
    operator_bitshiftleft shift and go to state 31
    operator_bitshiftright shift and go to state 32
    operator_and    shift and go to state 33
    operator_or     shift and go to state 34
    operator_xor    shift and go to state 35
    operator_contains shift and go to state 36
    operator_incr   shift and go to state 37
    operator_decr   shift and go to state 38
    operator_outer  shift and go to state 39
    operator_rotate shift and go to state 40
    operator_apply  shift and go to state 41
    operator_compose shift and go to state 42
    operator_over   shift and go to state 43
    operator_map    shift and go to state 44
    operator_less_than shift and go to state 45
    operator_less_than_equals shift and go to state 46
    operator_greater_than shift and go to state 47
    operator_greater_than_equals shift and go to state 48
    operator_equals shift and go to state 49
    operator_not_equals shift and go to state 50
    operator_smallest shift and go to state 51
    operator_greatest shift and go to state 52
    operator_goodname shift and go to state 53
    operator_bitnot shift and go to state 2
    operator_not    shift and go to state 3
    operator_reverse shift and go to state 4
    operator_sorted_incr shift and go to state 5
    operator_sorted_decr shift and go to state 6
    operator_s_combinator shift and go to state 7
    operator_goodname2 shift and go to state 8
    VAR             shift and go to state 10
    NUM             shift and go to state 11
    FLOAT           shift and go to state 12
    STRING_3SQ      shift and go to state 13
    STRING_3DQ      shift and go to state 14
    STRING_SQ       shift and go to state 15
    STRING_DQ       shift and go to state 16

  ! operator_add    [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_sub    [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_mul    [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_div    [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_trudiv [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_pow    [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_join   [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_split  [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_scan   [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_reduc  [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_bitand [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_bitor  [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_bitxor [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_bitshiftleft [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_bitshiftright [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_and    [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_or     [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_xor    [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_contains [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_incr   [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_decr   [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_outer  [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_rotate [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_apply  [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_compose [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_over   [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_map    [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_less_than [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_less_than_equals [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_greater_than [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_greater_than_equals [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_equals [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_not_equals [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_smallest [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_greatest [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_goodname [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_bitnot [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_not    [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_reverse [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_sorted_incr [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_sorted_decr [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_s_combinator [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_goodname2 [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! VAR             [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! NUM             [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! FLOAT           [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! STRING_3SQ      [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! STRING_3DQ      [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! STRING_SQ       [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! STRING_DQ       [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]
  ! operator_inner  [ reduce using rule 25 (expr -> expr expr operator_inner expr expr .) ]

    expr                           shift and go to state 17
    const_val                      shift and go to state 9
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for operator_add in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 54 resolved as shift
WARNING: shift/reduce conflict for VAR in state 54 resolved as shift
WARNING: shift/reduce conflict for NUM in state 54 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 54 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 54 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 54 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 54 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 54 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 55 resolved as shift
WARNING: shift/reduce conflict for VAR in state 55 resolved as shift
WARNING: shift/reduce conflict for NUM in state 55 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 55 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 55 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 55 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 55 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 55 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 56 resolved as shift
WARNING: shift/reduce conflict for VAR in state 56 resolved as shift
WARNING: shift/reduce conflict for NUM in state 56 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 56 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 56 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 56 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 56 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 56 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 57 resolved as shift
WARNING: shift/reduce conflict for VAR in state 57 resolved as shift
WARNING: shift/reduce conflict for NUM in state 57 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 57 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 57 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 57 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 57 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 57 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 58 resolved as shift
WARNING: shift/reduce conflict for VAR in state 58 resolved as shift
WARNING: shift/reduce conflict for NUM in state 58 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 58 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 58 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 58 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 58 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 58 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 60 resolved as shift
WARNING: shift/reduce conflict for VAR in state 60 resolved as shift
WARNING: shift/reduce conflict for NUM in state 60 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 60 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 60 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 60 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 60 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 60 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 62 resolved as shift
WARNING: shift/reduce conflict for VAR in state 62 resolved as shift
WARNING: shift/reduce conflict for NUM in state 62 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 62 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 62 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 62 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 62 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 62 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 63 resolved as shift
WARNING: shift/reduce conflict for VAR in state 63 resolved as shift
WARNING: shift/reduce conflict for NUM in state 63 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 63 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 63 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 63 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 63 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 63 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 64 resolved as shift
WARNING: shift/reduce conflict for VAR in state 64 resolved as shift
WARNING: shift/reduce conflict for NUM in state 64 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 64 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 64 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 64 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 64 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 64 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 65 resolved as shift
WARNING: shift/reduce conflict for VAR in state 65 resolved as shift
WARNING: shift/reduce conflict for NUM in state 65 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 65 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 65 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 65 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 65 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 65 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 66 resolved as shift
WARNING: shift/reduce conflict for VAR in state 66 resolved as shift
WARNING: shift/reduce conflict for NUM in state 66 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 66 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 66 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 66 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 66 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 66 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 67 resolved as shift
WARNING: shift/reduce conflict for VAR in state 67 resolved as shift
WARNING: shift/reduce conflict for NUM in state 67 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 67 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 67 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 67 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 67 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 67 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 68 resolved as shift
WARNING: shift/reduce conflict for VAR in state 68 resolved as shift
WARNING: shift/reduce conflict for NUM in state 68 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 68 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 68 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 68 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 68 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 68 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 69 resolved as shift
WARNING: shift/reduce conflict for VAR in state 69 resolved as shift
WARNING: shift/reduce conflict for NUM in state 69 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 69 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 69 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 69 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 69 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 69 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 70 resolved as shift
WARNING: shift/reduce conflict for VAR in state 70 resolved as shift
WARNING: shift/reduce conflict for NUM in state 70 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 70 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 70 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 70 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 70 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 70 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 71 resolved as shift
WARNING: shift/reduce conflict for VAR in state 71 resolved as shift
WARNING: shift/reduce conflict for NUM in state 71 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 71 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 71 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 71 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 71 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 71 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 72 resolved as shift
WARNING: shift/reduce conflict for VAR in state 72 resolved as shift
WARNING: shift/reduce conflict for NUM in state 72 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 72 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 72 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 72 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 72 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 72 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 73 resolved as shift
WARNING: shift/reduce conflict for VAR in state 73 resolved as shift
WARNING: shift/reduce conflict for NUM in state 73 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 73 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 73 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 73 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 73 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 73 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 74 resolved as shift
WARNING: shift/reduce conflict for VAR in state 74 resolved as shift
WARNING: shift/reduce conflict for NUM in state 74 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 74 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 74 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 74 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 74 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 74 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 75 resolved as shift
WARNING: shift/reduce conflict for VAR in state 75 resolved as shift
WARNING: shift/reduce conflict for NUM in state 75 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 75 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 75 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 75 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 75 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 75 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 76 resolved as shift
WARNING: shift/reduce conflict for VAR in state 76 resolved as shift
WARNING: shift/reduce conflict for NUM in state 76 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 76 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 76 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 76 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 76 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 76 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 77 resolved as shift
WARNING: shift/reduce conflict for VAR in state 77 resolved as shift
WARNING: shift/reduce conflict for NUM in state 77 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 77 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 77 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 77 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 77 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 77 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 78 resolved as shift
WARNING: shift/reduce conflict for VAR in state 78 resolved as shift
WARNING: shift/reduce conflict for NUM in state 78 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 78 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 78 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 78 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 78 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 78 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 79 resolved as shift
WARNING: shift/reduce conflict for VAR in state 79 resolved as shift
WARNING: shift/reduce conflict for NUM in state 79 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 79 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 79 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 79 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 79 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 79 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 80 resolved as shift
WARNING: shift/reduce conflict for VAR in state 80 resolved as shift
WARNING: shift/reduce conflict for NUM in state 80 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 80 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 80 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 80 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 80 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 80 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 82 resolved as shift
WARNING: shift/reduce conflict for VAR in state 82 resolved as shift
WARNING: shift/reduce conflict for NUM in state 82 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 82 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 82 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 82 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 82 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 82 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 83 resolved as shift
WARNING: shift/reduce conflict for VAR in state 83 resolved as shift
WARNING: shift/reduce conflict for NUM in state 83 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 83 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 83 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 83 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 83 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 83 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 84 resolved as shift
WARNING: shift/reduce conflict for VAR in state 84 resolved as shift
WARNING: shift/reduce conflict for NUM in state 84 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 84 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 84 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 84 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 84 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 84 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 85 resolved as shift
WARNING: shift/reduce conflict for VAR in state 85 resolved as shift
WARNING: shift/reduce conflict for NUM in state 85 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 85 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 85 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 85 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 85 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 85 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 86 resolved as shift
WARNING: shift/reduce conflict for VAR in state 86 resolved as shift
WARNING: shift/reduce conflict for NUM in state 86 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 86 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 86 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 86 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 86 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 86 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 87 resolved as shift
WARNING: shift/reduce conflict for VAR in state 87 resolved as shift
WARNING: shift/reduce conflict for NUM in state 87 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 87 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 87 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 87 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 87 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 87 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 88 resolved as shift
WARNING: shift/reduce conflict for VAR in state 88 resolved as shift
WARNING: shift/reduce conflict for NUM in state 88 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 88 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 88 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 88 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 88 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 88 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 89 resolved as shift
WARNING: shift/reduce conflict for VAR in state 89 resolved as shift
WARNING: shift/reduce conflict for NUM in state 89 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 89 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 89 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 89 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 89 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 89 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 90 resolved as shift
WARNING: shift/reduce conflict for VAR in state 90 resolved as shift
WARNING: shift/reduce conflict for NUM in state 90 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 90 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 90 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 90 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 90 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 90 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 91 resolved as shift
WARNING: shift/reduce conflict for VAR in state 91 resolved as shift
WARNING: shift/reduce conflict for NUM in state 91 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 91 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 91 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 91 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 91 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 91 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 92 resolved as shift
WARNING: shift/reduce conflict for VAR in state 92 resolved as shift
WARNING: shift/reduce conflict for NUM in state 92 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 92 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 92 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 92 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 92 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 92 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 93 resolved as shift
WARNING: shift/reduce conflict for VAR in state 93 resolved as shift
WARNING: shift/reduce conflict for NUM in state 93 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 93 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 93 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 93 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 93 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 93 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 94 resolved as shift
WARNING: shift/reduce conflict for VAR in state 94 resolved as shift
WARNING: shift/reduce conflict for NUM in state 94 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 94 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 94 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 94 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 94 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 94 resolved as shift
WARNING: shift/reduce conflict for operator_inner in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 97 resolved as shift
WARNING: shift/reduce conflict for VAR in state 97 resolved as shift
WARNING: shift/reduce conflict for NUM in state 97 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 97 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 97 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 97 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 97 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 97 resolved as shift
WARNING: shift/reduce conflict for operator_inner in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 98 resolved as shift
WARNING: shift/reduce conflict for VAR in state 98 resolved as shift
WARNING: shift/reduce conflict for NUM in state 98 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 98 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 98 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 98 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 98 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 98 resolved as shift
WARNING: shift/reduce conflict for operator_inner in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_add in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_sub in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_mul in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_div in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_trudiv in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_pow in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_join in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_split in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_scan in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_reduc in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_bitand in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_bitor in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_bitxor in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftleft in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_bitshiftright in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_and in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_or in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_xor in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_contains in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_incr in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_decr in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_outer in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_rotate in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_apply in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_compose in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_over in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_map in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_less_than in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_less_than_equals in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_greater_than_equals in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_equals in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_not_equals in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_smallest in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_greatest in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_goodname in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_bitnot in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_not in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_reverse in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_incr in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_sorted_decr in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_s_combinator in state 99 resolved as shift
WARNING: shift/reduce conflict for operator_goodname2 in state 99 resolved as shift
WARNING: shift/reduce conflict for VAR in state 99 resolved as shift
WARNING: shift/reduce conflict for NUM in state 99 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 99 resolved as shift
WARNING: shift/reduce conflict for STRING_3SQ in state 99 resolved as shift
WARNING: shift/reduce conflict for STRING_3DQ in state 99 resolved as shift
WARNING: shift/reduce conflict for STRING_SQ in state 99 resolved as shift
WARNING: shift/reduce conflict for STRING_DQ in state 99 resolved as shift
